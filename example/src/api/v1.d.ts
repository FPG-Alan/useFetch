/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

import { PathItemObject } from "openapi-typescript-helpers";

/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = T | U extends object
  ? (Without<T, U> & U) | (Without<U, T> & T)
  : T | U;
type OneOf<T extends any[]> = T extends [infer Only]
  ? Only
  : T extends [infer A, infer B, ...infer Rest]
  ? OneOf<[XOR<A, B>, ...Rest]>
  : never;

export interface paths {
  "/account": {
    patch: operations["savvy_main_back.routers.account.update"];
  };
  "/account/access_tokens": {
    get: operations["savvy_main_back.routers.account.access_token.list"];
  };
  "/account/access_tokens/{token_id}": {
    delete: operations["savvy_main_back.routers.account.access_token.delete"];
    patch: operations["savvy_main_back.routers.account.access_token.update"];
  };
  "/account/avatars/upload": {
    post: operations["savvy_main_back.routers.account.avatar.upload"];
    delete: operations["savvy_main_back.routers.account.avatar.delete"];
  };
  "/account/avatars/{width}x{height}.{ext}": {
    get: operations["savvy_main_back.routers.account.avatar.show"];
  };
  "/account/complete_registration": {
    post: operations["savvy_main_back.routers.account.complete_registration"];
  };
  "/account/create": {
    post: operations["savvy_main_back.routers.account.create"];
  };
  "/account/emails": {
    get: operations["savvy_main_back.routers.account.email.list"];
    post: operations["savvy_main_back.routers.account.email.create"];
  };
  "/account/emails/{email_id}": {
    delete: operations["savvy_main_back.routers.account.email.delete"];
    patch: operations["savvy_main_back.routers.account.email.update"];
  };
  "/account/emails/{email_id}/resend_verification": {
    post: operations["savvy_main_back.routers.account.email.resend_verification"];
  };
  "/account/emails/{email_id}/set_master": {
    post: operations["savvy_main_back.routers.account.email.set_master"];
  };
  "/account/find": {
    post: operations["savvy_main_back.routers.account.find"];
  };
  "/account/interflow/streams/watched_ids": {
    get: operations["savvy_main_back.routers.account.interflow.stream.watched_ids"];
  };
  "/account/interflow/streams/{stream_id}/has_watched": {
    get: operations["savvy_main_back.routers.account.interflow.stream.has_watched"];
  };
  "/account/interflow/streams/{stream_id}/unwatch": {
    post: operations["savvy_main_back.routers.account.interflow.stream.unwatch"];
  };
  "/account/interflow/streams/{stream_id}/watch": {
    post: operations["savvy_main_back.routers.account.interflow.stream.watch"];
  };
  "/account/notifications": {
    get: operations["savvy_main_back.routers.account.notification.list"];
    delete: operations["savvy_main_back.routers.account.notification.bulk_delete"];
  };
  "/account/notifications/mark_all_read": {
    post: operations["savvy_main_back.routers.account.notification.mark_all_read"];
  };
  "/account/notifications/mark_read": {
    post: operations["savvy_main_back.routers.account.notification.mark_read"];
  };
  "/account/notifications/{notification_id}": {
    get: operations["savvy_main_back.routers.account.notification.show"];
    delete: operations["savvy_main_back.routers.account.notification.delete"];
  };
  "/account/oauth/authorize_and_bind": {
    post: operations["savvy_main_back.routers.account.oauth.authorize_and_bind"];
  };
  "/account/oauth_binds": {
    get: operations["savvy_main_back.routers.account.oauth.list"];
  };
  "/account/oauth_binds/{oauth_user_id}": {
    delete: operations["savvy_main_back.routers.account.oauth.remove"];
  };
  "/account/phones": {
    get: operations["savvy_main_back.routers.account.phone.list"];
    post: operations["savvy_main_back.routers.account.phone.create"];
  };
  "/account/phones/{phone_id}": {
    delete: operations["savvy_main_back.routers.account.phone.delete"];
    patch: operations["savvy_main_back.routers.account.phone.update"];
  };
  "/account/phones/{phone_id}/resend_verification": {
    post: operations["savvy_main_back.routers.account.phone.resend_verification"];
  };
  "/account/phones/{phone_id}/set_master": {
    post: operations["savvy_main_back.routers.account.phone.set_master"];
  };
  "/account/resend_verification_email": {
    /**
     * @description
     * when user register and did not get verification email, allow user to call this method to resend verification email to the email address he/she used when registered.
     * this method is registered to public router, because user is not login, for only allow user to resend verification email
     * to himself, password is required.
     */
    post: operations["savvy_main_back.routers.account.resend_verification_email"];
  };
  "/account/reset_password": {
    post: operations["savvy_main_back.routers.account.reset_password"];
  };
  "/account/send_security_code": {
    post: operations["savvy_main_back.routers.account.send_security_code"];
  };
  "/account/share_links": {
    post: operations["savvy_main_back.routers.account.share_link.list"];
  };
  "/account/test_security_code": {
    post: operations["savvy_main_back.routers.account.test_security_code"];
  };
  "/account/update_ident_name": {
    post: operations["savvy_main_back.routers.account.update_ident_name"];
    patch: operations["savvy_main_back.routers.account.update_ident_name"];
  };
  "/account/update_password": {
    post: operations["savvy_main_back.routers.account.update_password"];
    patch: operations["savvy_main_back.routers.account.update_password"];
  };
  "/account/verify": {
    post: operations["savvy_main_back.routers.account.verify"];
  };
  "/auth/login": {
    post: operations["savvy_main_back.routers.auth.login"];
  };
  "/auth/logout": {
    post: operations["savvy_main_back.routers.auth.logout"];
  };
  "/builders/calc_mixture_hash": {
    post: operations["savvy_main_back.routers.builder.calc_mixture_hash"];
  };
  "/builders/cancel": {
    post: operations["savvy_main_back.routers.builder.bulk_cancel_build"];
  };
  "/builders/statuses": {
    get: operations["savvy_main_back.routers.builder.list_statuses"];
    post: operations["savvy_main_back.routers.builder.list_statuses"];
  };
  "/builders/{builder_id}/cancel": {
    post: operations["savvy_main_back.routers.builder.cancel_build"];
  };
  "/builders/{builder_id}/files": {
    get: operations["savvy_main_back.routers.builder.download_build_files"];
  };
  "/builders/{builder_id}/logs": {
    get: operations["savvy_main_back.routers.builder.list_logs"];
  };
  "/builders/{builder_id}/status": {
    get: operations["savvy_main_back.routers.builder.status"];
    post: operations["savvy_main_back.routers.builder.update_status"];
  };
  "/campaigns": {
    get: operations["savvy_main_back.routers.campaign.list"];
    post: operations["savvy_main_back.routers.campaign.create"];
    delete: operations["savvy_main_back.routers.campaign.bulk_delete"];
  };
  "/campaigns/{campaign_id}": {
    get: operations["savvy_main_back.routers.campaign.show"];
    delete: operations["savvy_main_back.routers.campaign.delete"];
    patch: operations["savvy_main_back.routers.campaign.update"];
  };
  "/campaigns/{campaign_id}/set_watermark": {
    post: operations["savvy_main_back.routers.campaign.set_watermark"];
  };
  "/creatives": {
    get: operations["savvy_main_back.routers.creative.list"];
    post: operations["savvy_main_back.routers.creative.create"];
    delete: operations["savvy_main_back.routers.creative.bulk_delete"];
  };
  "/creatives/build": {
    post: operations["savvy_main_back.routers.creative.bulk_build"];
  };
  "/creatives/restore": {
    post: operations["savvy_main_back.routers.creative.restore"];
  };
  "/creatives/{creative_id}": {
    get: operations["savvy_main_back.routers.creative.show"];
    delete: operations["savvy_main_back.routers.creative.delete"];
    patch: operations["savvy_main_back.routers.creative.update"];
  };
  "/creatives/{creative_id}/assets": {
    post: operations["savvy_main_back.routers.creative.upload_assets"];
  };
  "/creatives/{creative_id}/build": {
    post: operations["savvy_main_back.routers.creative.build"];
  };
  "/creatives/{creative_id}/build_files": {
    get: operations["savvy_main_back.routers.creative.download_build_files"];
  };
  "/creatives/{creative_id}/build_logs": {
    get: operations["savvy_main_back.routers.creative.show_build_logs"];
  };
  "/creatives/{creative_id}/build_results": {
    get: operations["savvy_main_back.routers.creative.list_build_results"];
  };
  "/creatives/{creative_id}/build_results//{builder}/{output}/poster.webp": {
    get: operations["savvy_main_back.routers.creative.build_result_poster"];
  };
  "/creatives/{creative_id}/build_results/{builder}": {
    get: operations["savvy_main_back.routers.creative.build_result"];
  };
  "/creatives/{creative_id}/build_results/{builder}/{*path}": {
    get: operations["savvy_main_back.routers.creative.serve_file"];
  };
  "/creatives/{creative_id}/calc_price": {
    get: operations["savvy_main_back.routers.creative.calc_price"];
  };
  "/creatives/{creative_id}/coupons": {
    get: operations["savvy_main_back.routers.creative.list_coupons"];
  };
  "/creatives/{creative_id}/outputs": {
    get: operations["savvy_main_back.routers.creative.list_outputs"];
  };
  "/creatives/{creative_id}/paid_status": {
    get: operations["savvy_main_back.routers.creative.get_paid_status"];
  };
  "/creatives/{creative_id}/prices": {
    get: operations["savvy_main_back.routers.creative.list_prices"];
  };
  "/creatives/{creative_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.creative.set_flow_status"];
  };
  "/creatives/{creative_id}/set_paid_status": {
    post: operations["savvy_main_back.routers.creative.set_paid_status"];
  };
  "/creatives/{creative_id}/set_watermark": {
    post: operations["savvy_main_back.routers.creative.set_watermark"];
  };
  "/creatives/{creative_id}/stream": {
    get: operations["savvy_main_back.routers.creative.ensure_stream"];
  };
  "/deploy/deploy_statuses": {
    get: operations["savvy_main_back.routers.deploy.deployment.list_deploy_statuses"];
    put: operations["savvy_main_back.routers.deploy.deployment.list_deploy_statuses"];
    post: operations["savvy_main_back.routers.deploy.deployment.list_deploy_statuses"];
    patch: operations["savvy_main_back.routers.deploy.deployment.list_deploy_statuses"];
  };
  "/deploy/deployments": {
    get: operations["savvy_main_back.routers.deploy.deployment.list"];
    post: operations["savvy_main_back.routers.deploy.deployment.create"];
    delete: operations["savvy_main_back.routers.deploy.deployment.bulk_delete"];
  };
  "/deploy/deployments/{deployment_id}": {
    get: operations["savvy_main_back.routers.deploy.deployment.show"];
    delete: operations["savvy_main_back.routers.deploy.deployment.delete"];
    patch: operations["savvy_main_back.routers.deploy.deployment.update"];
  };
  "/deploy/deployments/{deployment_id}/results": {
    delete: operations["savvy_main_back.routers.deploy.deployment.delete_results"];
  };
  "/deploy/deployments/{deployment_id}/results/{kind}": {
    get: operations["savvy_main_back.routers.deploy.deployment.list_results"];
  };
  "/deploy/filters": {
    post: operations["savvy_main_back.routers.deploy.filter.create"];
    delete: operations["savvy_main_back.routers.deploy.filter.bulk_delete"];
  };
  "/deploy/filters/{filter_id}": {
    get: operations["savvy_main_back.routers.deploy.filter.show"];
    delete: operations["savvy_main_back.routers.deploy.filter.delete"];
  };
  "/deploy/targets": {
    post: operations["savvy_main_back.routers.deploy.target.create"];
    delete: operations["savvy_main_back.routers.deploy.target.bulk_delete"];
  };
  "/deploy/targets/{target_id}": {
    get: operations["savvy_main_back.routers.deploy.target.show"];
    delete: operations["savvy_main_back.routers.deploy.target.delete"];
  };
  "/email_messages": {
    get: operations["savvy_main_back.routers.email_message.list"];
    delete: operations["savvy_main_back.routers.email_message.bulk_delete"];
  };
  "/email_messages/{email_id}": {
    get: operations["savvy_main_back.routers.email_message.show"];
    delete: operations["savvy_main_back.routers.email_message.delete"];
  };
  "/favorites": {
    post: operations["savvy_main_back.routers.favorite.create"];
    delete: operations["savvy_main_back.routers.favorite.bulk_delete"];
  };
  "/favorites/{favorite_id}": {
    delete: operations["savvy_main_back.routers.favorite.delete"];
    patch: operations["savvy_main_back.routers.favorite.update"];
  };
  "/help_videos": {
    get: operations["savvy_main_back.routers.help_video.list"];
    post: operations["savvy_main_back.routers.help_video.create"];
    delete: operations["savvy_main_back.routers.help_video.bulk_delete"];
  };
  "/help_videos/{video_id}": {
    get: operations["savvy_main_back.routers.help_video.show"];
    delete: operations["savvy_main_back.routers.help_video.delete"];
    patch: operations["savvy_main_back.routers.help_video.update"];
  };
  "/help_videos/{video_id}/{*path}": {
    get: operations["savvy_main_back.routers.help_video.serve_file"];
  };
  "/interflow/labels": {
    get: operations["savvy_main_back.routers.interflow.label.list"];
    post: operations["savvy_main_back.routers.interflow.label.create"];
    delete: operations["savvy_main_back.routers.interflow.label.bulk_delete"];
  };
  "/interflow/labels/{label_id}": {
    get: operations["savvy_main_back.routers.interflow.label.show"];
    delete: operations["savvy_main_back.routers.interflow.label.delete"];
    patch: operations["savvy_main_back.routers.interflow.label.update"];
  };
  "/interflow/relations": {
    post: operations["savvy_main_back.routers.interflow.relation.create"];
    delete: operations["savvy_main_back.routers.interflow.relation.bulk_delete"];
  };
  "/interflow/relations/{relation_id}": {
    delete: operations["savvy_main_back.routers.interflow.relation.delete"];
    patch: operations["savvy_main_back.routers.interflow.relation.update"];
  };
  "/interflow/streams": {
    get: operations["savvy_main_back.routers.interflow.stream.list"];
    post: operations["savvy_main_back.routers.interflow.stream.create"];
  };
  "/interflow/streams/{stream_id}": {
    get: operations["savvy_main_back.routers.interflow.stream.show"];
    patch: operations["savvy_main_back.routers.interflow.stream.update"];
  };
  "/interflow/streams/{stream_id}/relations": {
    get: operations["savvy_main_back.routers.interflow.stream.list_relations"];
  };
  "/interflow/streams/{stream_id}/set_recalled": {
    post: operations["savvy_main_back.routers.interflow.stream.set_recalled"];
  };
  "/interflow/streams/{stream_id}/set_rejected": {
    post: operations["savvy_main_back.routers.interflow.stream.set_rejected"];
  };
  "/interflow/streams/{stream_id}/set_resolved": {
    post: operations["savvy_main_back.routers.interflow.stream.set_resolved"];
  };
  "/interflow/streams/{stream_id}/threads": {
    get: operations["savvy_main_back.routers.interflow.stream.list_threads"];
  };
  "/interflow/streams/{stream_id}/timeline": {
    get: operations["savvy_main_back.routers.interflow.stream.get_timeline"];
  };
  "/interflow/threads": {
    get: operations["savvy_main_back.routers.interflow.thread.list"];
    post: operations["savvy_main_back.routers.interflow.thread.create"];
  };
  "/interflow/threads/{thread_id}": {
    get: operations["savvy_main_back.routers.interflow.thread.show"];
    patch: operations["savvy_main_back.routers.interflow.thread.update"];
  };
  "/interflow/threads/{thread_id}/relations": {
    get: operations["savvy_main_back.routers.interflow.thread.list_relations"];
  };
  "/interflow/threads/{thread_id}/set_recalled": {
    post: operations["savvy_main_back.routers.interflow.thread.set_recalled"];
  };
  "/interflow/threads/{thread_id}/set_rejected": {
    post: operations["savvy_main_back.routers.interflow.thread.set_rejected"];
  };
  "/interflow/threads/{thread_id}/set_resolved": {
    post: operations["savvy_main_back.routers.interflow.thread.set_resolved"];
  };
  "/kernel_realm": {
    get: operations["savvy_main_back.routers.realm.kernel"];
  };
  "/oauth": {
    get: operations["savvy_main_back.routers.oauth.authorize_url"];
  };
  "/oauth/authorize_and_login": {
    post: operations["savvy_main_back.routers.oauth.authorize_and_login"];
  };
  "/oauth/bind": {
    /**
     * bind to exist user
     * @description bind to exist user
     */
    post: operations["savvy_main_back.routers.oauth.bind"];
  };
  "/oauth/create_account_and_login": {
    post: operations["savvy_main_back.routers.oauth.create_account_and_login"];
  };
  "/operations/{operation_id}": {
    get: operations["savvy_main_back.routers.operation.show"];
  };
  "/outputs": {
    post: operations["savvy_main_back.routers.output.create"];
    delete: operations["savvy_main_back.routers.output.bulk_delete"];
  };
  "/outputs/{output_id}": {
    get: operations["savvy_main_back.routers.output.show"];
    delete: operations["savvy_main_back.routers.output.delete"];
    patch: operations["savvy_main_back.routers.output.update"];
  };
  "/outputs/{output_id}/comments": {
    get: operations["savvy_main_back.routers.output.comment.list"];
    post: operations["savvy_main_back.routers.output.comment.create"];
  };
  "/outputs/{output_id}/comments/{thread_id}": {
    get: operations["savvy_main_back.routers.output.comment.show"];
    delete: operations["savvy_main_back.routers.output.comment.delete"];
    patch: operations["savvy_main_back.routers.output.comment.update"];
  };
  "/outputs/{output_id}/stream": {
    get: operations["savvy_main_back.routers.output.ensure_stream"];
  };
  "/questionnaire/answers": {
    get: operations["savvy_main_back.routers.questionnaire.answer.list"];
    post: operations["savvy_main_back.routers.questionnaire.answer.create"];
  };
  "/questionnaire/answers/{answer_id}": {
    get: operations["savvy_main_back.routers.questionnaire.answer.show"];
    delete: operations["savvy_main_back.routers.questionnaire.answer.delete"];
    patch: operations["savvy_main_back.routers.questionnaire.answer.update"];
  };
  "/questionnaire/categories": {
    get: operations["savvy_main_back.routers.questionnaire.category.list"];
    post: operations["savvy_main_back.routers.questionnaire.category.create"];
  };
  "/questionnaire/categories/{category_id}": {
    get: operations["savvy_main_back.routers.questionnaire.category.show"];
    delete: operations["savvy_main_back.routers.questionnaire.category.delete"];
    patch: operations["savvy_main_back.routers.questionnaire.category.update"];
  };
  "/questionnaire/categories/{category_id}/questions": {
    get: operations["savvy_main_back.routers.questionnaire.category.list_questions"];
  };
  "/questionnaire/questions": {
    get: operations["savvy_main_back.routers.questionnaire.question.list"];
    post: operations["savvy_main_back.routers.questionnaire.question.create"];
  };
  "/questionnaire/questions/{question_id}": {
    get: operations["savvy_main_back.routers.questionnaire.question.show"];
    delete: operations["savvy_main_back.routers.questionnaire.question.delete"];
    patch: operations["savvy_main_back.routers.questionnaire.question.update"];
  };
  "/questionnaire/upload": {
    post: operations["savvy_main_back.routers.questionnaire.upload"];
  };
  "/questionnaire/{**path}": {
    get: operations["savvy_main_back.routers.questionnaire.serve_file"];
  };
  "/realms": {
    get: operations["savvy_main_back.routers.realm.list"];
    post: operations["savvy_main_back.routers.realm.create"];
    delete: operations["savvy_main_back.routers.realm.bulk_delete"];
  };
  "/realms/{realm_id}": {
    get: operations["savvy_main_back.routers.realm.show"];
    delete: operations["savvy_main_back.routers.realm.delete"];
    patch: operations["savvy_main_back.routers.realm.update"];
  };
  "/realms/{realm_id}/add_users": {
    post: operations["savvy_main_back.routers.realm.user.add"];
  };
  "/realms/{realm_id}/address": {
    get: operations["savvy_main_back.routers.realm.show_address"];
    post: operations["savvy_main_back.routers.realm.upsert_address"];
    patch: operations["savvy_main_back.routers.realm.upsert_address"];
  };
  "/realms/{realm_id}/allow_added_stewards": {
    get: operations["savvy_main_back.routers.realm.user.list_allow_added_stewards"];
  };
  "/realms/{realm_id}/allow_added_users": {
    get: operations["savvy_main_back.routers.realm.user.list_allow_added_users"];
  };
  "/realms/{realm_id}/buckets": {
    post: operations["savvy_main_back.routers.realm.bucket.upload"];
  };
  "/realms/{realm_id}/buckets/{*path}": {
    get: operations["savvy_main_back.routers.realm.bucket.serve_file"];
  };
  "/realms/{realm_id}/campaigns": {
    get: operations["savvy_main_back.routers.realm.list_campaigns"];
  };
  "/realms/{realm_id}/convert": {
    post: operations["savvy_main_back.routers.realm.convert"];
  };
  "/realms/{realm_id}/creatives": {
    get: operations["savvy_main_back.routers.realm.list_creatives"];
  };
  "/realms/{realm_id}/deploy/deployments": {
    get: operations["savvy_main_back.routers.realm.deploy.list_deployments"];
  };
  "/realms/{realm_id}/deploy/filters": {
    get: operations["savvy_main_back.routers.realm.deploy.list_filters"];
  };
  "/realms/{realm_id}/deploy/targets": {
    get: operations["savvy_main_back.routers.realm.deploy.list_targets"];
  };
  "/realms/{realm_id}/favorites": {
    get: operations["savvy_main_back.routers.realm.list_favorites"];
  };
  "/realms/{realm_id}/interflow/labels": {
    get: operations["savvy_main_back.routers.realm.interflow.list_labels"];
  };
  "/realms/{realm_id}/interflow/streams": {
    get: operations["savvy_main_back.routers.realm.interflow.list_streams"];
  };
  "/realms/{realm_id}/interflow/threads": {
    get: operations["savvy_main_back.routers.realm.interflow.list_threads"];
  };
  "/realms/{realm_id}/oauth/access_token": {
    post: operations["savvy_main_back.routers.realm.oauth.exchange_token"];
  };
  "/realms/{realm_id}/oauth/refresh": {
    get: operations["savvy_main_back.routers.realm.oauth.refresh_token"];
  };
  "/realms/{realm_id}/oauth_accesses": {
    get: operations["savvy_main_back.routers.realm.oauth_access.list"];
  };
  "/realms/{realm_id}/oauth_accesses/{oauth_access_id}": {
    delete: operations["savvy_main_back.routers.realm.oauth_access.delete"];
  };
  "/realms/{realm_id}/operations": {
    get: operations["savvy_main_back.routers.realm.list_operations"];
  };
  "/realms/{realm_id}/outputs": {
    get: operations["savvy_main_back.routers.realm.list_outputs"];
  };
  "/realms/{realm_id}/remove_users": {
    post: operations["savvy_main_back.routers.realm.user.remove"];
  };
  "/realms/{realm_id}/roles": {
    get: operations["savvy_main_back.routers.realm.list_roles"];
  };
  "/realms/{realm_id}/root_users": {
    get: operations["savvy_main_back.routers.realm.user.list_roots"];
  };
  "/realms/{realm_id}/stewards": {
    get: operations["savvy_main_back.routers.realm.user.list_stewards"];
  };
  "/realms/{realm_id}/stock/blueprints": {
    get: operations["savvy_main_back.routers.realm.stock.list_blueprints"];
  };
  "/realms/{realm_id}/stock/fonts": {
    get: operations["savvy_main_back.routers.realm.stock.list_fonts"];
  };
  "/realms/{realm_id}/stock/fonts/{*path}": {
    get: operations["savvy_main_back.routers.realm.stock.serve_font_file"];
  };
  "/realms/{realm_id}/stripe/customer_id": {
    get: operations["savvy_main_back.routers.realm.stripe.show_customer_id"];
  };
  "/realms/{realm_id}/stripe/payment_methods": {
    get: operations["savvy_main_back.routers.realm.stripe.list_payment_methods"];
  };
  "/realms/{realm_id}/stripe/set_default_payment_method": {
    post: operations["savvy_main_back.routers.realm.stripe.set_default_payment_method"];
  };
  "/realms/{realm_id}/stripe/tax_ids": {
    get: operations["savvy_main_back.routers.realm.stripe.list_tax_ids"];
    post: operations["savvy_main_back.routers.realm.stripe.create_tax_id"];
  };
  "/realms/{realm_id}/stripe/tax_ids/{tax_id}": {
    delete: operations["savvy_main_back.routers.realm.stripe.delete_tax_id"];
  };
  "/realms/{realm_id}/trade/orders": {
    get: operations["savvy_main_back.routers.realm.trade.list_orders"];
  };
  "/realms/{realm_id}/trade/payments": {
    get: operations["savvy_main_back.routers.realm.trade.list_payments"];
  };
  "/realms/{realm_id}/trade/receipts": {
    get: operations["savvy_main_back.routers.realm.trade.list_receipts"];
  };
  "/realms/{realm_id}/trade/shopping_items": {
    get: operations["savvy_main_back.routers.realm.trade.list_shopping_items"];
    post: operations["savvy_main_back.routers.realm.trade.create_shopping_items"];
    delete: operations["savvy_main_back.routers.realm.trade.delete_shopping_items"];
  };
  "/realms/{realm_id}/trade/shopping_items/{item_id}": {
    patch: operations["savvy_main_back.routers.realm.trade.update_shopping_item"];
  };
  "/realms/{realm_id}/users": {
    get: operations["savvy_main_back.routers.realm.user.list"];
  };
  "/realms/{realm_id}/wallet/obtained_coupons": {
    get: operations["savvy_main_back.routers.realm.wallet.list_obtained_coupons"];
    post: operations["savvy_main_back.routers.realm.wallet.obtain_coupon"];
  };
  "/roles": {
    get: operations["savvy_main_back.routers.role.list"];
    post: operations["savvy_main_back.routers.role.create"];
    delete: operations["savvy_main_back.routers.role.bulk_delete"];
  };
  "/roles/{role_id}": {
    get: operations["savvy_main_back.routers.role.show"];
    delete: operations["savvy_main_back.routers.role.delete"];
    patch: operations["savvy_main_back.routers.role.update"];
  };
  "/roles/{role_id}/add_users": {
    post: operations["savvy_main_back.routers.role.user.add"];
  };
  "/roles/{role_id}/permissions": {
    get: operations["savvy_main_back.routers.role.permission.list"];
    patch: operations["savvy_main_back.routers.role.permission.update"];
  };
  "/roles/{role_id}/remove_users": {
    post: operations["savvy_main_back.routers.role.user.remove"];
  };
  "/roles/{role_id}/users": {
    get: operations["savvy_main_back.routers.role.user.list"];
  };
  "/server/cleanup/creatives": {
    get: operations["savvy_main_back.routers.server.cleanup.creative_versions_status"];
    delete: operations["savvy_main_back.routers.server.cleanup.delete_creative_old_versions"];
  };
  "/server/farm_nodes": {
    get: operations["savvy_main_back.routers.server.farm_node.list"];
  };
  "/server/farm_nodes/{node_id}": {
    get: operations["savvy_main_back.routers.server.farm_node.show"];
    delete: operations["savvy_main_back.routers.server.farm_node.terminate"];
  };
  "/share_links": {
    post: operations["savvy_main_back.routers.share_link.create"];
    delete: operations["savvy_main_back.routers.share_link.bulk_delete"];
  };
  "/share_links/{hash}": {
    get: operations["savvy_main_back.routers.share_link.show"];
  };
  "/share_links/{link_id}": {
    delete: operations["savvy_main_back.routers.share_link.delete"];
    patch: operations["savvy_main_back.routers.share_link.update"];
  };
  "/stewards": {
    get: operations["savvy_main_back.routers.steward.list"];
    post: operations["savvy_main_back.routers.steward.create"];
  };
  "/stewards/allow_added_users": {
    get: operations["savvy_main_back.routers.steward.list_allow_added_users"];
  };
  "/stewards/{steward_id}": {
    delete: operations["savvy_main_back.routers.steward.delete"];
    patch: operations["savvy_main_back.routers.steward.update"];
  };
  "/stock/audios": {
    get: operations["savvy_main_back.routers.stock.audio.list"];
    delete: operations["savvy_main_back.routers.stock.audio.bulk_delete"];
  };
  "/stock/audios/upload": {
    post: operations["savvy_main_back.routers.stock.audio.upload"];
  };
  "/stock/audios/{audio_id}": {
    get: operations["savvy_main_back.routers.stock.audio.show"];
    delete: operations["savvy_main_back.routers.stock.audio.delete"];
    patch: operations["savvy_main_back.routers.stock.audio.update"];
  };
  "/stock/audios/{audio_id}/prices": {
    get: operations["savvy_main_back.routers.stock.audio.list_prices"];
  };
  "/stock/audios/{audio_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.audio.set_disabled"];
  };
  "/stock/audios/{audio_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.audio.set_flow_status"];
  };
  "/stock/audios/{audio_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.audio.set_public"];
  };
  "/stock/audios/{audio_id}/{*path}": {
    get: operations["savvy_main_back.routers.stock.audio.serve_file"];
  };
  "/stock/blueprints": {
    get: operations["savvy_main_back.routers.stock.blueprint.list"];
    post: operations["savvy_main_back.routers.stock.blueprint.create"];
    delete: operations["savvy_main_back.routers.stock.blueprint.bulk_delete"];
  };
  "/stock/blueprints/timeline": {
    get: operations["savvy_main_back.routers.stock.blueprint.get_timeline"];
  };
  "/stock/blueprints/{blueprint_id}": {
    get: operations["savvy_main_back.routers.stock.blueprint.show"];
    delete: operations["savvy_main_back.routers.stock.blueprint.delete"];
    patch: operations["savvy_main_back.routers.stock.blueprint.update"];
  };
  "/stock/blueprints/{blueprint_id}/build": {
    post: operations["savvy_main_back.routers.stock.blueprint.build"];
  };
  "/stock/blueprints/{blueprint_id}/build_logs": {
    get: operations["savvy_main_back.routers.stock.blueprint.show_build_logs"];
  };
  "/stock/blueprints/{blueprint_id}/feed_example": {
    get: operations["savvy_main_back.routers.stock.blueprint.feed_example"];
  };
  "/stock/blueprints/{blueprint_id}/metadata.json": {
    get: operations["savvy_main_back.routers.stock.blueprint.get_metadata"];
  };
  "/stock/blueprints/{blueprint_id}/packages": {
    post: operations["savvy_main_back.routers.stock.blueprint.upload_package"];
  };
  "/stock/blueprints/{blueprint_id}/packages/download": {
    get: operations["savvy_main_back.routers.stock.blueprint.download_package"];
  };
  "/stock/blueprints/{blueprint_id}/packages/upload": {
    post: operations["savvy_main_back.routers.stock.blueprint.upload_package"];
  };
  "/stock/blueprints/{blueprint_id}/packages/{version}/files/{*path}": {
    get: operations["savvy_main_back.routers.stock.blueprint.serve_file"];
    put: operations["savvy_main_back.routers.stock.blueprint.serve_file"];
    post: operations["savvy_main_back.routers.stock.blueprint.serve_file"];
    patch: operations["savvy_main_back.routers.stock.blueprint.serve_file"];
  };
  "/stock/blueprints/{blueprint_id}/paid_status": {
    get: operations["savvy_main_back.routers.stock.blueprint.get_paid_status"];
  };
  "/stock/blueprints/{blueprint_id}/prices": {
    get: operations["savvy_main_back.routers.stock.blueprint.list_prices"];
  };
  "/stock/blueprints/{blueprint_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.blueprint.set_disabled"];
  };
  "/stock/blueprints/{blueprint_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.blueprint.set_flow_status"];
  };
  "/stock/blueprints/{blueprint_id}/set_paid_status": {
    post: operations["savvy_main_back.routers.stock.blueprint.set_paid_status"];
  };
  "/stock/blueprints/{blueprint_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.blueprint.set_public"];
  };
  "/stock/blueprints/{blueprint_id}/stream": {
    get: operations["savvy_main_back.routers.stock.blueprint.ensure_stream"];
  };
  "/stock/exhibits": {
    get: operations["savvy_main_back.routers.stock.exhibit.list"];
    post: operations["savvy_main_back.routers.stock.exhibit.create"];
    delete: operations["savvy_main_back.routers.stock.exhibit.bulk_delete"];
  };
  "/stock/exhibits/{exhibit_id}": {
    get: operations["savvy_main_back.routers.stock.exhibit.show"];
    delete: operations["savvy_main_back.routers.stock.exhibit.delete"];
    patch: operations["savvy_main_back.routers.stock.exhibit.update"];
  };
  "/stock/exhibits/{exhibit_id}/force_paid": {
    post: operations["savvy_main_back.routers.stock.exhibit.force_paid"];
  };
  "/stock/exhibits/{exhibit_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.exhibit.set_flow_status"];
  };
  "/stock/fonts": {
    get: operations["savvy_main_back.routers.stock.font.list"];
    delete: operations["savvy_main_back.routers.stock.font.bulk_delete"];
  };
  "/stock/fonts/upload": {
    post: operations["savvy_main_back.routers.stock.font.upload"];
  };
  "/stock/fonts/{font_id}": {
    get: operations["savvy_main_back.routers.stock.font.show"];
    delete: operations["savvy_main_back.routers.stock.font.delete"];
    patch: operations["savvy_main_back.routers.stock.font.update"];
  };
  "/stock/fonts/{font_id}/files/{*path}": {
    get: operations["savvy_main_back.routers.stock.font.serve_file"];
  };
  "/stock/fonts/{font_id}/prices": {
    get: operations["savvy_main_back.routers.stock.font.list_prices"];
  };
  "/stock/fonts/{font_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.font.set_disabled"];
  };
  "/stock/fonts/{font_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.font.set_flow_status"];
  };
  "/stock/fonts/{font_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.font.set_public"];
  };
  "/stock/images": {
    get: operations["savvy_main_back.routers.stock.image.list"];
    delete: operations["savvy_main_back.routers.stock.image.bulk_delete"];
  };
  "/stock/images/upload": {
    post: operations["savvy_main_back.routers.stock.image.upload"];
  };
  "/stock/images/{image_id}": {
    get: operations["savvy_main_back.routers.stock.image.show"];
    delete: operations["savvy_main_back.routers.stock.image.delete"];
    patch: operations["savvy_main_back.routers.stock.image.update"];
  };
  "/stock/images/{image_id}/prices": {
    get: operations["savvy_main_back.routers.stock.image.list_prices"];
  };
  "/stock/images/{image_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.image.set_disabled"];
  };
  "/stock/images/{image_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.image.set_flow_status"];
  };
  "/stock/images/{image_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.image.set_public"];
  };
  "/stock/images/{image_id}/{*path}": {
    get: operations["savvy_main_back.routers.stock.image.serve_file"];
  };
  "/stock/labels": {
    get: operations["savvy_main_back.routers.stock.label.list"];
    post: operations["savvy_main_back.routers.stock.label.create"];
    delete: operations["savvy_main_back.routers.stock.label.bulk_delete"];
  };
  "/stock/labels/{label_id}": {
    get: operations["savvy_main_back.routers.stock.label.show"];
    delete: operations["savvy_main_back.routers.stock.label.delete"];
    patch: operations["savvy_main_back.routers.stock.label.update"];
  };
  "/stock/molds": {
    get: operations["savvy_main_back.routers.stock.mold.list"];
    post: operations["savvy_main_back.routers.stock.mold.create"];
    delete: operations["savvy_main_back.routers.stock.mold.bulk_delete"];
  };
  "/stock/molds/{mold_id}": {
    get: operations["savvy_main_back.routers.stock.mold.show"];
    delete: operations["savvy_main_back.routers.stock.mold.delete"];
    patch: operations["savvy_main_back.routers.stock.mold.update"];
  };
  "/stock/molds/{mold_id}/build": {
    post: operations["savvy_main_back.routers.stock.mold.build"];
  };
  "/stock/molds/{mold_id}/build_logs": {
    get: operations["savvy_main_back.routers.stock.mold.show_build_logs"];
  };
  "/stock/molds/{mold_id}/metadata.json": {
    get: operations["savvy_main_back.routers.stock.mold.get_metadata"];
  };
  "/stock/molds/{mold_id}/packages": {
    post: operations["savvy_main_back.routers.stock.mold.upload_package"];
  };
  "/stock/molds/{mold_id}/packages/download": {
    get: operations["savvy_main_back.routers.stock.mold.download_package"];
  };
  "/stock/molds/{mold_id}/packages/upload": {
    post: operations["savvy_main_back.routers.stock.mold.upload_package"];
  };
  "/stock/molds/{mold_id}/packages/{version}/files/{*path}": {
    get: operations["savvy_main_back.routers.stock.mold.serve_file"];
  };
  "/stock/molds/{mold_id}/paid_status": {
    get: operations["savvy_main_back.routers.stock.mold.get_paid_status"];
  };
  "/stock/molds/{mold_id}/prices": {
    get: operations["savvy_main_back.routers.stock.mold.list_prices"];
  };
  "/stock/molds/{mold_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.mold.set_disabled"];
  };
  "/stock/molds/{mold_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.mold.set_flow_status"];
  };
  "/stock/molds/{mold_id}/set_paid_status": {
    post: operations["savvy_main_back.routers.stock.mold.set_paid_status"];
  };
  "/stock/molds/{mold_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.mold.set_public"];
  };
  "/stock/recast_factors": {
    get: operations["savvy_main_back.routers.stock.recast_factor.list"];
    post: operations["savvy_main_back.routers.stock.recast_factor.create"];
    delete: operations["savvy_main_back.routers.stock.recast_factor.bulk_delete"];
  };
  "/stock/recast_factors/{factor_id}": {
    get: operations["savvy_main_back.routers.stock.recast_factor.show"];
    delete: operations["savvy_main_back.routers.stock.recast_factor.delete"];
    patch: operations["savvy_main_back.routers.stock.recast_factor.update"];
  };
  "/stock/recast_factors/{factor_id}/items": {
    get: operations["savvy_main_back.routers.stock.recast_factor.list_items"];
  };
  "/stock/recast_items": {
    post: operations["savvy_main_back.routers.stock.recast_item.create"];
    delete: operations["savvy_main_back.routers.stock.recast_item.bulk_delete"];
  };
  "/stock/recast_items/{item_id}": {
    get: operations["savvy_main_back.routers.stock.recast_item.show"];
    delete: operations["savvy_main_back.routers.stock.recast_item.delete"];
    patch: operations["savvy_main_back.routers.stock.recast_item.update"];
  };
  "/stock/recast_items/{item_id}/prices": {
    get: operations["savvy_main_back.routers.stock.recast_item.list_prices"];
  };
  "/stock/recasts": {
    get: operations["savvy_main_back.routers.stock.recast.list"];
    post: operations["savvy_main_back.routers.stock.recast.create"];
    delete: operations["savvy_main_back.routers.stock.recast.bulk_delete"];
  };
  "/stock/recasts/{recast_id}": {
    get: operations["savvy_main_back.routers.stock.recast.show"];
    delete: operations["savvy_main_back.routers.stock.recast.delete"];
    patch: operations["savvy_main_back.routers.stock.recast.update"];
  };
  "/stock/recasts/{recast_id}/calc_max_price": {
    get: operations["savvy_main_back.routers.stock.recast.calc_max_price"];
  };
  "/stock/recasts/{recast_id}/calc_min_price": {
    get: operations["savvy_main_back.routers.stock.recast.calc_min_price"];
  };
  "/stock/recasts/{recast_id}/calc_price_range": {
    get: operations["savvy_main_back.routers.stock.recast.calc_price_range"];
  };
  "/stock/recasts/{recast_id}/factors": {
    get: operations["savvy_main_back.routers.stock.recast.list_factors"];
  };
  "/stock/stylekits": {
    get: operations["savvy_main_back.routers.stock.stylekit.list"];
    post: operations["savvy_main_back.routers.stock.stylekit.create"];
    delete: operations["savvy_main_back.routers.stock.stylekit.bulk_delete"];
  };
  "/stock/stylekits/{stylekit_id}": {
    get: operations["savvy_main_back.routers.stock.stylekit.show"];
    delete: operations["savvy_main_back.routers.stock.stylekit.delete"];
    patch: operations["savvy_main_back.routers.stock.stylekit.update"];
  };
  "/stock/stylekits/{stylekit_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.stylekit.set_disabled"];
  };
  "/stock/stylekits/{stylekit_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.stylekit.set_public"];
  };
  "/stock/upload": {
    post: operations["savvy_main_back.routers.stock.upload"];
  };
  "/stock/videos": {
    get: operations["savvy_main_back.routers.stock.video.list"];
    delete: operations["savvy_main_back.routers.stock.video.bulk_delete"];
  };
  "/stock/videos/upload": {
    post: operations["savvy_main_back.routers.stock.video.upload"];
  };
  "/stock/videos/{video_id}": {
    get: operations["savvy_main_back.routers.stock.video.show"];
    delete: operations["savvy_main_back.routers.stock.video.delete"];
    patch: operations["savvy_main_back.routers.stock.video.update"];
  };
  "/stock/videos/{video_id}/prices": {
    get: operations["savvy_main_back.routers.stock.video.list_prices"];
  };
  "/stock/videos/{video_id}/progress": {
    get: operations["savvy_main_back.routers.stock.video.progress"];
  };
  "/stock/videos/{video_id}/set_disabled": {
    post: operations["savvy_main_back.routers.stock.video.set_disabled"];
  };
  "/stock/videos/{video_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.stock.video.set_flow_status"];
  };
  "/stock/videos/{video_id}/set_public": {
    post: operations["savvy_main_back.routers.stock.video.set_public"];
  };
  "/stock/videos/{video_id}/{*path}": {
    get: operations["savvy_main_back.routers.stock.video.serve_file"];
  };
  "/stripe/create_setup_intent": {
    post: operations["savvy_main_back.routers.stripe.setup_intent.create"];
  };
  "/stripe/payment_intents": {
    post: operations["savvy_main_back.routers.stripe.payment_intent.create"];
  };
  "/stripe/payment_intents/{intent_id}/confirm": {
    get: operations["savvy_main_back.routers.stripe.payment_intent.confirm"];
  };
  "/stripe/payment_methods/{payment_method_id}/attach": {
    post: operations["savvy_main_back.routers.stripe.payment_method.attach"];
  };
  "/stripe/payment_methods/{payment_method_id}/detach": {
    post: operations["savvy_main_back.routers.stripe.payment_method.detach"];
  };
  "/stripe/public_key": {
    get: operations["savvy_main_back.routers.stripe.public_key"];
  };
  "/stripe/webhooks": {
    post: operations["savvy_main_back.routers.stripe.webhook.listen"];
  };
  "/taxonomy/boundaries": {
    get: operations["savvy_main_back.routers.taxonomy.boundary.list"];
    post: operations["savvy_main_back.routers.taxonomy.boundary.create"];
    delete: operations["savvy_main_back.routers.taxonomy.boundary.bulk_delete"];
  };
  "/taxonomy/boundaries/{boundary_id}": {
    get: operations["savvy_main_back.routers.taxonomy.boundary.show"];
    delete: operations["savvy_main_back.routers.taxonomy.boundary.delete"];
    patch: operations["savvy_main_back.routers.taxonomy.boundary.update"];
  };
  "/taxonomy/categories": {
    get: operations["savvy_main_back.routers.taxonomy.category.list"];
    post: operations["savvy_main_back.routers.taxonomy.category.create"];
    delete: operations["savvy_main_back.routers.taxonomy.category.bulk_delete"];
  };
  "/taxonomy/categories/items": {
    get: operations["savvy_main_back.routers.taxonomy.category.list_items"];
  };
  "/taxonomy/categories/{category_id}": {
    get: operations["savvy_main_back.routers.taxonomy.category.show"];
    delete: operations["savvy_main_back.routers.taxonomy.category.delete"];
    patch: operations["savvy_main_back.routers.taxonomy.category.update"];
  };
  "/taxonomy/categories/{category_id}/items": {
    post: operations["savvy_main_back.routers.taxonomy.category.add_item"];
    delete: operations["savvy_main_back.routers.taxonomy.category.remove_items"];
  };
  "/taxonomy/selectors": {
    get: operations["savvy_main_back.routers.taxonomy.selector.list"];
    post: operations["savvy_main_back.routers.taxonomy.selector.create"];
    delete: operations["savvy_main_back.routers.taxonomy.selector.bulk_delete"];
  };
  "/taxonomy/selectors/{selector_id}": {
    get: operations["savvy_main_back.routers.taxonomy.selector.show"];
    delete: operations["savvy_main_back.routers.taxonomy.selector.delete"];
    patch: operations["savvy_main_back.routers.taxonomy.selector.update"];
  };
  "/trade/calc_amount": {
    post: operations["savvy_main_back.routers.trade.calc_amount"];
  };
  "/trade/contracts": {
    post: operations["savvy_main_back.routers.trade.contract.create"];
  };
  "/trade/contracts/{contract_id}": {
    get: operations["savvy_main_back.routers.trade.contract.show"];
    delete: operations["savvy_main_back.routers.trade.contract.cancel"];
  };
  "/trade/coupons": {
    get: operations["savvy_main_back.routers.trade.coupon.list"];
    post: operations["savvy_main_back.routers.trade.coupon.create"];
  };
  "/trade/coupons/{coupon_id}": {
    get: operations["savvy_main_back.routers.trade.coupon.show"];
    delete: operations["savvy_main_back.routers.trade.coupon.delete"];
    patch: operations["savvy_main_back.routers.trade.coupon.update"];
  };
  "/trade/coupons/{coupon_id}/items": {
    get: operations["savvy_main_back.routers.trade.coupon.list_items"];
    post: operations["savvy_main_back.routers.trade.coupon.add_item"];
    delete: operations["savvy_main_back.routers.trade.coupon.remove_item"];
  };
  "/trade/invoices": {
    get: operations["savvy_main_back.routers.trade.invoice.list"];
    post: operations["savvy_main_back.routers.trade.invoice.create"];
  };
  "/trade/invoices/{invoice_id}": {
    get: operations["savvy_main_back.routers.trade.invoice.show"];
    delete: operations["savvy_main_back.routers.trade.invoice.delete"];
    patch: operations["savvy_main_back.routers.trade.invoice.update"];
  };
  "/trade/invoices/{invoice_id}/force_paid": {
    post: operations["savvy_main_back.routers.trade.invoice.force_paid"];
  };
  "/trade/invoices/{invoice_id}/items": {
    get: operations["savvy_main_back.routers.trade.invoice.list_items"];
    post: operations["savvy_main_back.routers.trade.invoice.upsert_items"];
    delete: operations["savvy_main_back.routers.trade.invoice.remove_items"];
  };
  "/trade/invoices/{invoice_id}/refund_items": {
    get: operations["savvy_main_back.routers.trade.invoice.list_refund_items"];
  };
  "/trade/invoices/{invoice_id}/relations": {
    get: operations["savvy_main_back.routers.trade.invoice.list_relations"];
  };
  "/trade/invoices/{invoice_id}/shipments": {
    get: operations["savvy_main_back.routers.trade.invoice.list_shipments"];
  };
  "/trade/invoices/{invoice_id}/stream": {
    get: operations["savvy_main_back.routers.trade.invoice.ensure_stream"];
  };
  "/trade/orders": {
    get: operations["savvy_main_back.routers.trade.order.list"];
    post: operations["savvy_main_back.routers.trade.order.create"];
  };
  "/trade/orders/{order_id}": {
    get: operations["savvy_main_back.routers.trade.order.show"];
    delete: operations["savvy_main_back.routers.trade.order.delete"];
    patch: operations["savvy_main_back.routers.trade.order.update"];
  };
  "/trade/orders/{order_id}/activities": {
    get: operations["savvy_main_back.routers.trade.order.list_activities"];
    post: operations["savvy_main_back.routers.trade.order.add_activity"];
    delete: operations["savvy_main_back.routers.trade.order.remove_activities"];
  };
  "/trade/orders/{order_id}/cancel": {
    post: operations["savvy_main_back.routers.trade.order.cancel"];
  };
  "/trade/orders/{order_id}/confirm_price": {
    post: operations["savvy_main_back.routers.trade.order.confirm_price"];
  };
  "/trade/orders/{order_id}/force_paid": {
    post: operations["savvy_main_back.routers.trade.order.force_paid"];
  };
  "/trade/orders/{order_id}/items": {
    get: operations["savvy_main_back.routers.trade.order.list_items"];
  };
  "/trade/orders/{order_id}/refund_items": {
    get: operations["savvy_main_back.routers.trade.order.list_refund_items"];
  };
  "/trade/orders/{order_id}/relations": {
    get: operations["savvy_main_back.routers.trade.order.list_relations"];
    post: operations["savvy_main_back.routers.trade.order.add_relation"];
    delete: operations["savvy_main_back.routers.trade.order.remove_relations"];
  };
  "/trade/orders/{order_id}/set_flow_status": {
    post: operations["savvy_main_back.routers.trade.order.set_flow_status"];
  };
  "/trade/orders/{order_id}/set_price": {
    post: operations["savvy_main_back.routers.trade.order.set_price"];
  };
  "/trade/orders/{order_id}/shipments": {
    get: operations["savvy_main_back.routers.trade.order.list_shipments"];
  };
  "/trade/orders/{order_id}/stream": {
    get: operations["savvy_main_back.routers.trade.order.ensure_stream"];
  };
  "/trade/payments": {
    get: operations["savvy_main_back.routers.trade.payment.list"];
    post: operations["savvy_main_back.routers.trade.payment.create"];
  };
  "/trade/payments/{payment_id}": {
    get: operations["savvy_main_back.routers.trade.payment.show"];
    patch: operations["savvy_main_back.routers.trade.payment.update"];
  };
  "/trade/prices": {
    post: operations["savvy_main_back.routers.trade.price.create"];
  };
  "/trade/prices/{price_id}": {
    get: operations["savvy_main_back.routers.trade.price.show"];
    delete: operations["savvy_main_back.routers.trade.price.delete"];
    patch: operations["savvy_main_back.routers.trade.price.update"];
  };
  "/trade/product_bundles": {
    get: operations["savvy_main_back.routers.trade.product_bundle.list"];
    post: operations["savvy_main_back.routers.trade.product_bundle.create"];
    delete: operations["savvy_main_back.routers.trade.product_bundle.bulk_delete"];
  };
  "/trade/product_bundles/{bundle_id}": {
    get: operations["savvy_main_back.routers.trade.product_bundle.show"];
    delete: operations["savvy_main_back.routers.trade.product_bundle.delete"];
  };
  "/trade/product_bundles/{bundle_id}/calc_max_price": {
    get: operations["savvy_main_back.routers.trade.product_bundle.calc_max_price"];
  };
  "/trade/product_bundles/{bundle_id}/calc_min_price": {
    get: operations["savvy_main_back.routers.trade.product_bundle.calc_min_price"];
  };
  "/trade/product_bundles/{bundle_id}/calc_price_range": {
    get: operations["savvy_main_back.routers.trade.product_bundle.calc_price_range"];
  };
  "/trade/product_bundles/{bundle_id}/prices": {
    get: operations["savvy_main_back.routers.trade.product_bundle.list_prices"];
  };
  "/trade/product_troupes": {
    get: operations["savvy_main_back.routers.trade.product_troupe.list"];
    post: operations["savvy_main_back.routers.trade.product_troupe.create"];
    delete: operations["savvy_main_back.routers.trade.product_troupe.bulk_delete"];
  };
  "/trade/product_troupes/{troupe_id}": {
    get: operations["savvy_main_back.routers.trade.product_troupe.show"];
    delete: operations["savvy_main_back.routers.trade.product_troupe.delete"];
  };
  "/trade/product_troupes/{troupe_id}/calc_max_price": {
    get: operations["savvy_main_back.routers.trade.product_troupe.calc_max_price"];
  };
  "/trade/product_troupes/{troupe_id}/calc_min_price": {
    get: operations["savvy_main_back.routers.trade.product_troupe.calc_min_price"];
  };
  "/trade/product_troupes/{troupe_id}/calc_price_range": {
    get: operations["savvy_main_back.routers.trade.product_troupe.calc_price_range"];
  };
  "/trade/product_troupes/{troupe_id}/prices": {
    get: operations["savvy_main_back.routers.trade.product_troupe.list_prices"];
  };
  "/trade/products": {
    get: operations["savvy_main_back.routers.trade.product.list"];
    post: operations["savvy_main_back.routers.trade.product.create"];
    delete: operations["savvy_main_back.routers.trade.product.bulk_delete"];
  };
  "/trade/products/{product_id}": {
    get: operations["savvy_main_back.routers.trade.product.show"];
    delete: operations["savvy_main_back.routers.trade.product.delete"];
    patch: operations["savvy_main_back.routers.trade.product.update"];
  };
  "/trade/products/{product_id}/calc_price": {
    get: operations["savvy_main_back.routers.trade.product.calc_price"];
  };
  "/trade/products/{product_id}/coupons": {
    get: operations["savvy_main_back.routers.trade.product.list_coupons"];
  };
  "/trade/products/{product_id}/prices": {
    get: operations["savvy_main_back.routers.trade.product.list_prices"];
  };
  "/trade/receipts": {
    get: operations["savvy_main_back.routers.trade.receipt.list"];
  };
  "/trade/receipts/{receipt_id}": {
    get: operations["savvy_main_back.routers.trade.receipt.show"];
  };
  "/trade/refund_items/{item_id}": {
    get: operations["savvy_main_back.routers.trade.refund_item.show"];
  };
  "/trade/refunds": {
    get: operations["savvy_main_back.routers.trade.refund.list"];
    post: operations["savvy_main_back.routers.trade.refund.create"];
  };
  "/trade/refunds/{refund_id}": {
    get: operations["savvy_main_back.routers.trade.refund.show"];
  };
  "/trade/refunds/{refund_id}/items": {
    get: operations["savvy_main_back.routers.trade.refund.list_items"];
  };
  "/trade/shipments": {
    post: operations["savvy_main_back.routers.trade.shipment.create"];
  };
  "/trade/shipments/{shipment_id}": {
    get: operations["savvy_main_back.routers.trade.shipment.show"];
    delete: operations["savvy_main_back.routers.trade.shipment.delete"];
    patch: operations["savvy_main_back.routers.trade.shipment.update"];
  };
  "/trade/shipments/{shipment_id}/items": {
    get: operations["savvy_main_back.routers.trade.shipment.list_items"];
    post: operations["savvy_main_back.routers.trade.shipment.add_item"];
    delete: operations["savvy_main_back.routers.trade.shipment.remove_items"];
  };
  "/trade/shipments/{shipment_id}/set_status": {
    post: operations["savvy_main_back.routers.trade.shipment.set_status"];
  };
  "/trade/staples": {
    get: operations["savvy_main_back.routers.trade.staple.list"];
    post: operations["savvy_main_back.routers.trade.staple.create"];
    delete: operations["savvy_main_back.routers.trade.staple.bulk_delete"];
  };
  "/trade/staples/grouped_by_category": {
    get: operations["savvy_main_back.routers.trade.staple.list_grouped_by_category"];
  };
  "/trade/staples/{staple_id}": {
    get: operations["savvy_main_back.routers.trade.staple.show"];
    delete: operations["savvy_main_back.routers.trade.staple.delete"];
    patch: operations["savvy_main_back.routers.trade.staple.update"];
  };
  "/users": {
    get: operations["savvy_main_back.routers.user.list"];
    post: operations["savvy_main_back.routers.user.create"];
    delete: operations["savvy_main_back.routers.user.bulk_delete"];
  };
  "/users/invite": {
    post: operations["savvy_main_back.routers.user.invite"];
  };
  "/users/is_other_taken": {
    get: operations["savvy_main_back.routers.user.is_other_taken"];
  };
  "/users/{user_id}": {
    get: operations["savvy_main_back.routers.user.show"];
    delete: operations["savvy_main_back.routers.user.delete"];
    patch: operations["savvy_main_back.routers.user.update"];
  };
  "/users/{user_id}/avatars/upload": {
    post: operations["savvy_main_back.routers.user.avatar.upload"];
    delete: operations["savvy_main_back.routers.user.avatar.delete"];
  };
  "/users/{user_id}/avatars/{width}x{height}.{ext}": {
    get: operations["savvy_main_back.routers.user.avatar.show"];
  };
  "/users/{user_id}/emails": {
    get: operations["savvy_main_back.routers.user.email.list"];
    post: operations["savvy_main_back.routers.user.email.create"];
  };
  "/users/{user_id}/emails/{email_id}": {
    delete: operations["savvy_main_back.routers.user.email.delete"];
  };
  "/users/{user_id}/has_partial_permissions": {
    post: operations["savvy_main_back.routers.user.permission.has_partial_permissions"];
  };
  "/users/{user_id}/has_record_permissions": {
    post: operations["savvy_main_back.routers.user.permission.has_record_permissions"];
  };
  "/users/{user_id}/phones": {
    get: operations["savvy_main_back.routers.user.phone.list"];
    post: operations["savvy_main_back.routers.user.phone.create"];
  };
  "/users/{user_id}/phones/{phone_id}": {
    delete: operations["savvy_main_back.routers.user.phone.delete"];
  };
  "/users/{user_id}/realms": {
    get: operations["savvy_main_back.routers.user.list_realms"];
  };
  "/users/{user_id}/reject": {
    post: operations["savvy_main_back.routers.user.reject"];
    delete: operations["savvy_main_back.routers.user.reject"];
  };
  "/users/{user_id}/resend_invitation_email": {
    get: operations["savvy_main_back.routers.user.resend_invitation_email"];
  };
  "/users/{user_id}/roles": {
    get: operations["savvy_main_back.routers.user.list_roles"];
  };
  "/users/{user_id}/root_of_realms": {
    get: operations["savvy_main_back.routers.user.list_root_of_realms"];
  };
  "/users/{user_id}/set_disabled": {
    post: operations["savvy_main_back.routers.user.set_disabled"];
  };
  "/users/{user_id}/set_in_kernel": {
    post: operations["savvy_main_back.routers.user.set_in_kernel"];
  };
  "/users/{user_id}/set_limited": {
    post: operations["savvy_main_back.routers.user.set_limited"];
  };
  "/users/{user_id}/set_locked": {
    post: operations["savvy_main_back.routers.user.set_locked"];
  };
  "/users/{user_id}/share_links": {
    get: operations["savvy_main_back.routers.user.share_link.list"];
  };
  "/users/{user_id}/steward_of_realms": {
    get: operations["savvy_main_back.routers.user.list_steward_of_realms"];
  };
  "/wallet/obtained_coupons": {
    get: operations["savvy_main_back.routers.wallet.obtained_coupon.list"];
    post: operations["savvy_main_back.routers.wallet.obtained_coupon.obtain"];
    delete: operations["savvy_main_back.routers.wallet.obtained_coupon.bulk_delete"];
  };
  "/wallet/obtained_coupons/{obtained_id}": {
    get: operations["savvy_main_back.routers.wallet.obtained_coupon.show"];
    delete: operations["savvy_main_back.routers.wallet.obtained_coupon.delete"];
    patch: operations["savvy_main_back.routers.wallet.obtained_coupon.update"];
  };
  "/wallet/used_coupons": {
    get: operations["savvy_main_back.routers.wallet.used_coupon.list"];
  };
  // [key: string]: PathItemObject;
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "salvo_core.http.errors.status_error.StatusError": {
      brief: string;
      cause?: string;
      /** Format: int32 */
      code: number;
      detail: string;
      name: string;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.Email>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.Email"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.EmailMessage>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.EmailMessage"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.Notification>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.Notification"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.OauthRealmAccess>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.OauthRealmAccess"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.OauthUser>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.OauthUser"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.Phone>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.Phone"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.Realm>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.Realm"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.Role>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.Role"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.Steward>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.Steward"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.base.User>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.base.User"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Deployment>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.deploy.Deployment"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Filter>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.deploy.Filter"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Target>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.deploy.Target"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.help.HelpVideo>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.help.HelpVideo"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Label>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.interflow.Label"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Relation>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.interflow.Relation"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Stream>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.interflow.Stream"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Thread>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.interflow.Thread"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Answer>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.questionnaire.Answer"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Category>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.questionnaire.Category"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Question>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.questionnaire.Question"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Audio>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Audio"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Blueprint>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Blueprint"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Exhibit>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Exhibit"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Font>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Font"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Image>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Image"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Label>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Label"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Mold>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Mold"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Recast>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Recast"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.RecastFactor>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.RecastFactor"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.RecastItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.RecastItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Stylekit>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Stylekit"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.stock.Video>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.stock.Video"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.studio.Campaign>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.studio.Campaign"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.studio.Creative>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.studio.Creative"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.studio.Favorite>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.studio.Favorite"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.studio.Output>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.studio.Output"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.studio.ShareLink>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.studio.ShareLink"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.Boundary>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.taxonomy.Boundary"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.Category>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.taxonomy.Category"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.CategoryItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.taxonomy.CategoryItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.Selector>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.taxonomy.Selector"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Coupon>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Coupon"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.CouponItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.CouponItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Invoice>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Invoice"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.InvoiceItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.InvoiceItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Order>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Order"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.OrderActivity>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.OrderActivity"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.OrderItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.OrderItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.OrderRelation>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.OrderRelation"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Payment>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Payment"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Price"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Product>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Product"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.ProductBundle>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.ProductBundle"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.ProductTroupe>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.ProductTroupe"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Receipt>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Receipt"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Refund>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Refund"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.RefundItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.RefundItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Shipment>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Shipment"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.ShipmentItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.ShipmentItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.ShoppingItem>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.ShoppingItem"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.trade.Staple>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.trade.Staple"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.wallet.ObtainedCoupon>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.wallet.ObtainedCoupon"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.models.wallet.UsedCoupon>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.models.wallet.UsedCoupon"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.data.PagedData<savvy_main_back.routers.trade.staple.GroupedByCategory>": {
      /** Format: int64 */
      limit: number;
      /** Format: int64 */
      offset: number;
      records: components["schemas"]["savvy_main_back.routers.trade.staple.GroupedByCategory"][];
      sort?: string | null;
      /** Format: int64 */
      total: number;
    };
    "savvy_main_back.models.Script": {
      code: string;
      lang: string;
    };
    "savvy_main_back.models.base.AccessToken": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      device?: string | null;
      /** Format: date-time */
      expires_at: string;
      /** Format: int64 */
      id: number;
      kind: string;
      name?: string | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      user_id: number;
      value: string;
    };
    "savvy_main_back.models.base.Address": {
      city?: string | null;
      country: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      line1?: string | null;
      line2?: string | null;
      post_code?: string | null;
      /** Format: int64 */
      realm_id: number;
      state?: string | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.base.Email": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      domain: string;
      /** Format: int64 */
      id: number;
      is_master: boolean;
      is_subscribed: boolean;
      is_verified: boolean;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      user_id: number;
      value: string;
    };
    "savvy_main_back.models.base.EmailMessage": {
      /** Format: date-time */
      created_at: string;
      error?: string | null;
      html_body?: string | null;
      /** Format: int64 */
      id: number;
      kind: string;
      recipients: string[];
      status: string;
      subject: string;
      text_body?: string | null;
      /** Format: date-time */
      updated_at: string;
    };
    "savvy_main_back.models.base.Notification": {
      body: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      extra?: Record<string, unknown> | null;
      /** Format: int64 */
      id: number;
      is_read: boolean;
      kind: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      sender_id?: number | null;
      subject: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.base.OauthRealmAccess": {
      access_token: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: date-time */
      expires_at: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      owner_id: number;
      platform: string;
      /** Format: int64 */
      realm_id: number;
      refresh_token?: string | null;
      shop?: string | null;
      token_type: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.base.OauthUser": {
      access_token: string;
      /** Format: date-time */
      created_at: string;
      /** Format: date-time */
      expires_at: string;
      /** Format: int64 */
      id: number;
      me_email?: string | null;
      me_full_name?: string | null;
      me_id: string;
      me_phone?: string | null;
      platform: string;
      refresh_token?: string | null;
      token_type: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      user_id?: number | null;
    };
    "savvy_main_back.models.base.Phone": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      is_master: boolean;
      is_subscribed: boolean;
      is_verified: boolean;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      user_id: number;
      value: string;
    };
    "savvy_main_back.models.base.PostedEmail": {
      is_subscribed?: boolean;
      value?: string;
    };
    "savvy_main_back.models.base.PostedPhone": {
      is_subscribed?: boolean;
      value?: string;
    };
    "savvy_main_back.models.base.Realm": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      kind: string;
      /** Format: int64 */
      max_allowed_mixture_duration: number;
      name: string;
      profile: Record<string, never>;
      referral_code: string;
      /** Format: int64 */
      referred_by?: number | null;
      stripe_customer_id?: string | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.base.Role": {
      code?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      kind: string;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.base.Steward": {
      auto_assignable: boolean;
      available: boolean;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      is_supervisor: boolean;
      /** Format: int64 */
      serviced_count: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      user_id: number;
    };
    "savvy_main_back.models.base.User": {
      avatar?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: date-time */
      disabled_at?: string | null;
      /** Format: int64 */
      disabled_by?: number | null;
      display_name: string;
      /** Format: int64 */
      id: number;
      ident_name: string;
      in_kernel: boolean;
      invite_replied?: boolean | null;
      /** Format: int64 */
      inviter_id?: number | null;
      is_disabled: boolean;
      is_limited: boolean;
      is_locked: boolean;
      is_root: boolean;
      is_verified: boolean;
      /** Format: date-time */
      limited_at?: string | null;
      /** Format: int64 */
      limited_by?: number | null;
      /** Format: date-time */
      locked_at?: string | null;
      /** Format: int64 */
      locked_by?: number | null;
      profile: Record<string, never>;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: date-time */
      verified_at?: string | null;
    };
    "savvy_main_back.models.deploy.Deployment": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      filters: Record<string, never>;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      resources: Record<string, never>;
      status: string;
      targets: Record<string, never>;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.deploy.Filter": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      items: Record<string, never>;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.deploy.Target": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      items: Record<string, never>;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.help.HelpVideo": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      is_delisted: boolean;
      label?: string | null;
      link: string;
      name: string;
      place?: string | null;
      poster?: string | null;
      /** Format: int64 */
      sort_rank: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.interflow.Label": {
      color?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.interflow.Relation": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      realm_id: number;
      reason?: string | null;
      /** Format: int64 */
      record_id: number;
      /** Format: int64 */
      stream_id: number;
      /** Format: int64 */
      thread_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.interflow.Stream": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra?: Record<string, unknown> | null;
      /** Format: int64 */
      id: number;
      is_recalled: boolean;
      is_rejected: boolean;
      is_resolved: boolean;
      kind: string;
      label_ids: number[];
      listener_ids: number[];
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      relied_entity?: string | null;
      /** Format: int64 */
      relied_id?: number | null;
      subject: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.interflow.Thread": {
      at_ids: number[];
      attachments: Record<string, never>;
      content: Record<string, never>;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      initial_id?: number | null;
      is_internal: boolean;
      is_primary: boolean;
      is_recalled: boolean;
      is_rejected: boolean;
      is_resolved: boolean;
      kind: string;
      label_ids: number[];
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      replied_id?: number | null;
      /** Format: int64 */
      stream_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.questionnaire.Answer": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      data: Record<string, never>;
      description?: string | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      question_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.questionnaire.Category": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      data: Record<string, never>;
      description?: string | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      weight: number;
    };
    "savvy_main_back.models.questionnaire.Question": {
      /** Format: int64 */
      category_id: number;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      data: Record<string, never>;
      description?: string | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id: number;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      weight: number;
    };
    "savvy_main_back.models.stock.Audio": {
      /** Format: int64 */
      byte_size: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      /** Format: double */
      duration: number;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      flow_status: string;
      format: string;
      hash: string;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      label_ids: number[];
      metadata: Record<string, never>;
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      recast_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      usage: string;
      /** Format: int64 */
      version: number;
    };
    "savvy_main_back.models.stock.Blueprint": {
      build_status: string;
      built_kind: string;
      /** Format: int64 */
      byte_size: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      flow_status: string;
      hash: string;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      label_ids: number[];
      /** Format: int64 */
      last_builder_id?: number | null;
      metadata: Record<string, never>;
      mixture?: Record<string, unknown> | null;
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      reap_hash: string;
      /** Format: int64 */
      recast_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      version: number;
    };
    "savvy_main_back.models.stock.Exhibit": {
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand: Record<string, never>;
      description?: string | null;
      extra?: Record<string, unknown> | null;
      finish?: Record<string, unknown> | null;
      flow_status: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      /** Format: int64 */
      invoice_item_id?: number | null;
      keywords: string[];
      label_ids: number[];
      name: string;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      order_item_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: date-time */
      paid_at?: string | null;
      /** Format: int64 */
      paid_by?: number | null;
      paid_reson?: string | null;
      paid_status: string;
      paid_through?: string | null;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      recast_id: number;
      /** Format: int64 */
      recast_item_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.stock.Font": {
      /** Format: int64 */
      byte_size: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      family: string;
      flow_status: string;
      format: string;
      hash: string;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      label_ids: number[];
      metadata: Record<string, never>;
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      recast_id?: number | null;
      style: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      version: number;
    };
    "savvy_main_back.models.stock.Image": {
      /** Format: int64 */
      byte_size: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      flow_status: string;
      format: string;
      hash: string;
      /** Format: int64 */
      height: number;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      label_ids: number[];
      metadata: Record<string, never>;
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      recast_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      usage: string;
      /** Format: int64 */
      version: number;
      /** Format: int64 */
      width: number;
    };
    "savvy_main_back.models.stock.Label": {
      color?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.stock.Mold": {
      build_status: string;
      built_kind: string;
      /** Format: int64 */
      byte_size: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      flow_status: string;
      hash: string;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      kind: string;
      label_ids: number[];
      /** Format: int64 */
      last_builder_id?: number | null;
      metadata: Record<string, never>;
      mixture?: Record<string, unknown> | null;
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      reap_hash: string;
      /** Format: int64 */
      recast_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      usage: string;
      /** Format: int64 */
      version: number;
    };
    "savvy_main_back.models.stock.Recast": {
      bedge?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra?: Record<string, unknown> | null;
      factor_ids: number[];
      /** Format: int64 */
      id: number;
      keywords: string[];
      label_ids: number[];
      name: string;
      /** Format: int64 */
      owner_id: number;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.stock.RecastFactor": {
      bedge?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra?: Record<string, unknown> | null;
      /** Format: int64 */
      id: number;
      keywords: string[];
      label_ids: number[];
      /** Format: int64 */
      max_quantity?: number | null;
      /** Format: int64 */
      min_quantity: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      sort_rank: number;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.stock.RecastItem": {
      bedge?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra?: Record<string, unknown> | null;
      /** Format: int64 */
      factor_id: number;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      max_quantity?: number | null;
      /** Format: int64 */
      min_quantity: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      sort_rank: number;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.stock.Stylekit": {
      colors?: Record<string, unknown> | null;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      flow_status: string;
      fonts?: Record<string, unknown> | null;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      label_ids: number[];
      logos?: Record<string, unknown> | null;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      recast_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.stock.Video": {
      /** Format: int64 */
      byte_size: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      /** Format: double */
      duration: number;
      exhibit_ids: number[];
      extra?: Record<string, unknown> | null;
      flow_status: string;
      format: string;
      hash: string;
      /** Format: int64 */
      height: number;
      /** Format: int64 */
      id: number;
      is_disabled: boolean;
      is_prototype: boolean;
      is_public: boolean;
      keywords: string[];
      label_ids: number[];
      metadata?: Record<string, unknown> | null;
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      process_status: string;
      /** Format: int64 */
      prototype_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      recast_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      usage: string;
      /** Format: int64 */
      version: number;
      /** Format: int64 */
      width: number;
    };
    "savvy_main_back.models.studio.Builder": {
      /** Format: int64 */
      blueprint_id?: number | null;
      /** Format: int64 */
      blueprint_version?: number | null;
      cache_disabled: boolean;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      creative_id?: number | null;
      /** Format: int64 */
      event_stamp?: number | null;
      /** Format: int64 */
      id: number;
      kind: string;
      mixture?: Record<string, unknown> | null;
      /** Format: int64 */
      mold_id?: number | null;
      /** Format: int64 */
      mold_version?: number | null;
      outputs: Record<string, never>;
      priority: string;
      /** Format: int64 */
      realm_id: number;
      reap_hash: string;
      sole_key?: string | null;
      status: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.studio.Campaign": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      watermark: string;
    };
    "savvy_main_back.models.studio.Creative": {
      audio_ids: number[];
      blueprint_ids: number[];
      build_status: string;
      built_kind: string;
      /** Format: int64 */
      campaign_id: number;
      controlled_by: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      exhibit_ids: number[];
      flow_status: string;
      font_ids: number[];
      /** Format: int64 */
      id: number;
      image_ids: number[];
      /** Format: int64 */
      last_builder_id?: number | null;
      listener_ids: number[];
      mixture: Record<string, never>;
      mold_ids: number[];
      name: string;
      /** Format: int64 */
      origin_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      reap_hash: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      video_ids: number[];
      watermark: string;
    };
    "savvy_main_back.models.studio.Favorite": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      entity: string;
      extra?: Record<string, unknown> | null;
      /** Format: int64 */
      id: number;
      keywords: string[];
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id: number;
      /** Format: int64 */
      sort_rank: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.studio.Output": {
      bitrate?: string | null;
      /** Format: int64 */
      campaign_id: number;
      codec?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      creative_id: number;
      description?: string | null;
      format: string;
      /** Format: double */
      frame_rate?: number | null;
      /** Format: int64 */
      height: number;
      /** Format: int64 */
      id: number;
      max_bitrate?: string | null;
      metadata: Record<string, never>;
      min_bitrate?: string | null;
      modifier_name?: string | null;
      name: string;
      /** Format: double */
      poster: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      width: number;
    };
    "savvy_main_back.models.studio.ShareLink": {
      blueprint_ids: number[];
      campaign_ids: number[];
      code?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      creative_ids: number[];
      /** Format: date-time */
      expires_at?: string | null;
      hash: string;
      /** Format: int64 */
      id: number;
      name?: string | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.taxonomy.Boundary": {
      code: string;
      color?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.taxonomy.Category": {
      /** Format: int64 */
      boundary_id: number;
      color?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.taxonomy.CategoryItem": {
      /** Format: int64 */
      category_id: number;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id: number;
    };
    "savvy_main_back.models.taxonomy.Selector": {
      /** Format: int64 */
      boundary_id: number;
      category_ids?: number[] | null;
      color?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Contract": {
      /** Format: date-time */
      canceled_at?: string | null;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      owner_id: number;
      paid_through: string;
      /** Format: date-time */
      paused_at?: string | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id: number;
      /** Format: date-time */
      started_at: string;
      status: string;
      stripe_subscription_ids: string[];
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Coupon": {
      code: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      expires_after_usable?: number | null;
      /** Format: date-time */
      expires_at?: string | null;
      /** Format: int64 */
      id: number;
      is_delisted: boolean;
      /** Format: int64 */
      layer: number;
      name: string;
      obtained_mode: string;
      options: Record<string, never>;
      /** Format: int64 */
      period: number;
      /** Format: int64 */
      priority: number;
      /** Format: int64 */
      realm_count_limit?: number | null;
      script: components["schemas"]["savvy_main_back.models.Script"];
      /** Format: date-time */
      started_at: string;
      /** Format: int64 */
      total_count_limit?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      /** Format: int64 */
      used_count: number;
      worker: string;
    };
    "savvy_main_back.models.trade.CouponItem": {
      /** Format: int64 */
      coupon_id: number;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      record_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Invoice": {
      actual_amount: string;
      calc_detail?: Record<string, unknown> | null;
      /** Format: int64 */
      contract_id?: number | null;
      coupon_ids: number[];
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      /** Format: date-time */
      due_date?: string | null;
      /** Format: date-time */
      expires_at?: string | null;
      final_amount: string;
      flow_status: string;
      /** Format: int64 */
      id: number;
      original_amount: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: date-time */
      paid_at?: string | null;
      /** Format: int64 */
      paid_by?: number | null;
      paid_reason?: string | null;
      paid_status: string;
      paid_through?: string | null;
      /** Format: int64 */
      payment_id?: number | null;
      paypal_invoice_id?: string | null;
      /** Format: int64 */
      realm_id: number;
      reduced_amount: string;
      stripe_invoice_id?: string | null;
      stripe_tax_calculation?: Record<string, unknown> | null;
      stripe_tax_transaction?: Record<string, unknown> | null;
      tax_amount: string;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.InvoiceItem": {
      actual_amount: string;
      actual_price: string;
      coupon_ids: number[];
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      entity?: string | null;
      factors?: Record<string, unknown> | null;
      final_amount: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id: number;
      original_price: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      price_kind: string;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id?: number | null;
      reduced_amount: string;
      tax_amount?: string | null;
      tax_behavior?: string | null;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Order": {
      actual_amount?: string | null;
      calc_detail?: Record<string, unknown> | null;
      controlled_by: string;
      coupon_ids: number[];
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      /** Format: date-time */
      expires_at?: string | null;
      final_amount?: string | null;
      flow_kind: string;
      flow_status: string;
      /** Format: int64 */
      id: number;
      is_splited: boolean;
      original_amount?: string | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: date-time */
      paid_at?: string | null;
      /** Format: int64 */
      paid_by?: number | null;
      paid_reason?: string | null;
      paid_status: string;
      paid_through?: string | null;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      payment_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      reduced_amount?: string | null;
      stripe_tax_calculation?: Record<string, unknown> | null;
      stripe_tax_transaction?: Record<string, unknown> | null;
      tax_amount?: string | null;
      title?: string | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.OrderActivity": {
      /** Format: int64 */
      actor_id?: number | null;
      content: Record<string, never>;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      order_id: number;
      /** Format: int64 */
      realm_id: number;
      title: string;
    };
    "savvy_main_back.models.trade.OrderItem": {
      actual_amount?: string | null;
      actual_price?: string | null;
      coupon_ids: number[];
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      entity?: string | null;
      /** Format: int64 */
      exhibit_id?: number | null;
      factors?: Record<string, unknown> | null;
      final_amount?: string | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      order_id: number;
      original_price?: string | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      price_kind: string;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id?: number | null;
      reduced_amount?: string | null;
      tax_amount?: string | null;
      tax_behavior?: string | null;
      title: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.OrderRelation": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      order_id: number;
      /** Format: int64 */
      order_item_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      reason?: string | null;
      /** Format: int64 */
      record_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.PaidUnit": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      entity: string;
      hash: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      kind: string;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id?: number | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Payment": {
      amount: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      description?: string | null;
      flow_status: string;
      /** Format: int64 */
      id: number;
      invoice_ids: number[];
      order_ids: number[];
      origin: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: date-time */
      paid_at?: string | null;
      /** Format: int64 */
      paid_by?: number | null;
      paid_status: string;
      paid_through: string;
      paypal_invoice_id?: string | null;
      paypal_order_id?: string | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      receipt_id?: number | null;
      stripe_invoice_id?: string | null;
      stripe_payment_intent_id?: string | null;
      tax_amount: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Price": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      description?: string | null;
      entity: string;
      /** Format: date-time */
      expires_at?: string | null;
      extra?: Record<string, unknown> | null;
      floating?:
        | ({
            kind: "savvy_main_back.models.trade.Price";
          } & Omit<
            components["schemas"]["savvy_main_back.models.trade.PriceFloating"],
            "kind"
          >)
        | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      /** Format: int64 */
      invoice_item_id?: number | null;
      is_disabled: boolean;
      kind: string;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      order_item_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      priority: number;
      /** Format: int64 */
      record_id: number;
      recurring?:
        | components["schemas"]["savvy_main_back.models.trade.PriceRecurring"]
        | null;
      /** Format: date-time */
      started_at: string;
      stripe_price_id?: string | null;
      tax_behavior?: string | null;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
      value: string;
    };
    "savvy_main_back.models.trade.PriceFloating":
      | {
          /** @enum {string} */
          kind: "graduated_tier";
          tiers: components["schemas"]["savvy_main_back.models.trade.PriceTier"][];
        }
      | {
          /** @enum {string} */
          kind: "volume_tier";
          tiers: components["schemas"]["savvy_main_back.models.trade.PriceTier"][];
        };
    "savvy_main_back.models.trade.PriceRecurring": {
      aggregate_usage: components["schemas"]["savvy_main_back.models.trade.RecurringAggregateUsage"];
      interval_unit: components["schemas"]["savvy_main_back.models.trade.RecurringIntervalUnit"];
      /** Format: int64 */
      interval_value: number;
      resource_quota: components["schemas"]["savvy_main_back.models.trade.RecurringResourceQuota"];
    };
    "savvy_main_back.models.trade.PriceTier": {
      /** Format: int64 */
      quantity_from?: number | null;
      /** Format: int64 */
      quantity_upto: number;
      value: string;
    };
    "savvy_main_back.models.trade.Product": {
      benefits?:
        | components["schemas"]["savvy_main_back.models.trade.ProductBenefits"]
        | null;
      code: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra: Record<string, never>;
      /** Format: int64 */
      id: number;
      is_delisted: boolean;
      kind: string;
      name: string;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      parent_id?: number | null;
      recurring?:
        | components["schemas"]["savvy_main_back.models.trade.ProductRecurring"]
        | null;
      /** Format: int64 */
      sort_rank: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.ProductBenefit":
      | {
          currency: string;
          /** @enum {string} */
          kind: "recharge_currency";
        }
      | {
          /** Format: int64 */
          coupon_id: number;
          /** @enum {string} */
          kind: "obtain_coupon";
          /** Format: int64 */
          quantity: number;
        };
    "savvy_main_back.models.trade.ProductBenefits": components["schemas"]["savvy_main_back.models.trade.ProductBenefit"][];
    "savvy_main_back.models.trade.ProductBundle": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra: Record<string, never>;
      /** Format: int64 */
      id: number;
      is_delisted: boolean;
      name: string;
      /** Format: int64 */
      owner_id: number;
      product_ids: number[];
      /** Format: int64 */
      sort_rank: number;
      troupe_ids: number[];
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.ProductRecurring": {
      items: components["schemas"]["savvy_main_back.models.trade.ProductRecurringItem"][];
    };
    "savvy_main_back.models.trade.ProductRecurringItem": {
      /** Format: int64 */
      price_id: number;
      /** Format: int64 */
      product_id: number;
    };
    "savvy_main_back.models.trade.ProductTroupe": {
      bundle_ids: number[];
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      extra: Record<string, never>;
      /** Format: int64 */
      id: number;
      is_delisted: boolean;
      name: string;
      /** Format: int64 */
      owner_id: number;
      product_ids: number[];
      /** Format: int64 */
      sort_rank: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Receipt": {
      amount: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      description?: string | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      owner_id: number;
      /** Format: date-time */
      paid_at: string;
      /** Format: int64 */
      paid_by?: number | null;
      paid_through: string;
      /** Format: int64 */
      payment_id: number;
      /** Format: int64 */
      realm_id: number;
      tax_amount: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    /** @enum {string} */
    "savvy_main_back.models.trade.RecurringAggregateUsage":
      | "last_during_period"
      | "last_ever"
      | "max"
      | "sum";
    /** @enum {string} */
    "savvy_main_back.models.trade.RecurringIntervalUnit":
      | "day"
      | "week"
      | "month"
      | "year";
    "savvy_main_back.models.trade.RecurringResourceQuota":
      | {
          entity: string;
          /** @enum {string} */
          kind: "licensed";
          /** Format: int64 */
          quantity?: number | null;
          /** Format: int64 */
          record_id?: number | null;
        }
      | {
          entity: string;
          /** @enum {string} */
          kind: "metered";
          /** Format: int64 */
          record_id?: number | null;
        };
    "savvy_main_back.models.trade.Refund": {
      amount: string;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      currency: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      payment_id: number;
      paypal_refund_id?: string | null;
      /** Format: int64 */
      realm_id: number;
      reason?: string | null;
      status: string;
      stripe_refund_id?: string | null;
      tax_amount: string;
    };
    "savvy_main_back.models.trade.RefundItem": {
      amount: string;
      currency: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      /** Format: int64 */
      invoice_item_id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      order_item_id?: number | null;
      /** Format: int64 */
      payment_id: number;
      /** Format: int64 */
      realm_id: number;
      reason?: string | null;
      /** Format: int64 */
      refund_id: number;
      tax_amount: string;
    };
    "savvy_main_back.models.trade.Shipment": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      owner_id: number;
      /** Format: int64 */
      realm_id: number;
      status: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.ShipmentItem": {
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id: number;
      /** Format: int64 */
      shipment_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.ShoppingItem": {
      checked: boolean;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      demand: Record<string, never>;
      description?: string | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      realm_id: number;
      /** Format: int64 */
      record_id: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.trade.Staple": {
      /** Format: int64 */
      category_id: number;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      entity: string;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      record_id: number;
      /** Format: int64 */
      sort_rank: number;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.wallet.ObtainedCoupon": {
      /** Format: int64 */
      coupon_id: number;
      /** Format: date-time */
      created_at: string;
      /** Format: int64 */
      created_by?: number | null;
      description?: string | null;
      /** Format: date-time */
      expires_at?: string | null;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      is_used: boolean;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      /** Format: date-time */
      started_at: string;
      /** Format: date-time */
      updated_at: string;
      /** Format: int64 */
      updated_by?: number | null;
    };
    "savvy_main_back.models.wallet.UsedCoupon": {
      /** Format: int64 */
      coupon_id: number;
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      invoice_id?: number | null;
      /** Format: int64 */
      obtained_id?: number | null;
      /** Format: int64 */
      order_id?: number | null;
      /** Format: int64 */
      realm_id: number;
      snapshot?:
        | components["schemas"]["savvy_main_back.models.trade.Coupon"]
        | null;
      /** Format: date-time */
      used_at: string;
      /** Format: int64 */
      used_by?: number | null;
    };
    "savvy_main_back.routers.account.FindOkData": {
      email?:
        | components["schemas"]["savvy_main_back.routers.account.MaskedEmail"]
        | null;
      phone?:
        | components["schemas"]["savvy_main_back.routers.account.MaskedPhone"]
        | null;
      /** Format: int64 */
      user_id: number;
    };
    "savvy_main_back.routers.account.MaskedEmail": {
      /** Format: int64 */
      id: number;
      value: string;
    };
    "savvy_main_back.routers.account.MaskedPhone": {
      /** Format: int64 */
      id: number;
      value: string;
    };
    "savvy_main_back.routers.account.TestSecurityCodeOkData": {
      is_valid: boolean;
      message: string;
    };
    "savvy_main_back.routers.account.VerifyOkData": {
      email?: components["schemas"]["savvy_main_back.models.base.Email"] | null;
      phone?: components["schemas"]["savvy_main_back.models.base.Phone"] | null;
      token?: string | null;
      user?: components["schemas"]["savvy_main_back.models.base.User"] | null;
    };
    "savvy_main_back.routers.auth.LoginOkData": {
      token?: string | null;
      user: components["schemas"]["savvy_main_back.models.base.User"];
    };
    "savvy_main_back.routers.builder.CalcMixtureHashOkData": {
      hash: string;
    };
    "savvy_main_back.routers.builder.UpdateStatusData": {
      value: string;
    };
    "savvy_main_back.routers.creative.CreateInOutput": {
      bitrate?: string | null;
      codec?: string | null;
      description?: string | null;
      format: string;
      /** Format: double */
      frame_rate?: number | null;
      /** Format: int64 */
      height: number;
      max_bitrate?: string | null;
      metadata?: Record<string, never>;
      min_bitrate?: string | null;
      name: string;
      /** Format: double */
      poster?: number | null;
      watermark?: string;
      /** Format: int64 */
      width: number;
    };
    "savvy_main_back.routers.creative.GetPaidStatusOkData": {
      is_paid: boolean;
      paid_unit?:
        | components["schemas"]["savvy_main_back.models.trade.PaidUnit"]
        | null;
    };
    "savvy_main_back.routers.creative.RestoreOkData": {
      creative: components["schemas"]["savvy_main_back.models.studio.Creative"];
      outputs: components["schemas"]["savvy_main_back.models.studio.Output"][];
    };
    "savvy_main_back.routers.deploy.deployment.PlatformStateItem": {
      /** Format: int64 */
      id: number;
      status: string;
    };
    "savvy_main_back.routers.deploy.deployment.ResultStateItem": {
      box_results: components["schemas"]["savvy_main_back.routers.deploy.deployment.PlatformStateItem"][];
      dropbox_results: components["schemas"]["savvy_main_back.routers.deploy.deployment.PlatformStateItem"][];
      facebook_results: components["schemas"]["savvy_main_back.routers.deploy.deployment.PlatformStateItem"][];
      google_drive_results: components["schemas"]["savvy_main_back.routers.deploy.deployment.PlatformStateItem"][];
      /** Format: int64 */
      id: number;
      status: string;
    };
    "savvy_main_back.routers.help_video.CreateIndData": {
      description?: string | null;
      is_delisted: boolean;
      label?: string | null;
      link: string;
      name: string;
      place?: string | null;
      poster?: string | null;
      /** Format: int64 */
      sort_rank?: number | null;
    };
    "savvy_main_back.routers.oauth.BindOkData": OneOf<
      [
        {
          Token: string;
        },
        {
          OauthUser: components["schemas"]["savvy_main_back.models.base.OauthUser"];
        }
      ]
    >;
    "savvy_main_back.routers.oauth.CreateAccountAndLoginOkData": {
      error?: components["schemas"]["savvy_main_back.shared.StatusInfo"] | null;
      token?: string | null;
      user: components["schemas"]["savvy_main_back.models.base.User"];
    };
    "savvy_main_back.routers.oauth.OauthBindData": {
      access_token: string;
      me_id: string;
      platform: string;
    };
    "savvy_main_back.routers.realm.trade.CreateShoppingItemsInItem": {
      checked?: boolean | null;
      demand?: Record<string, unknown> | null;
      description?: string | null;
      entity: string;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      record_id: number;
    };
    "savvy_main_back.routers.role.permission.UpdateInItem": {
      action: string;
      entity: string;
      /** Format: int64 */
      filter_int_value?: number | null;
      filter_name: string;
      filter_text_value?: string | null;
      scope: string;
    };
    "savvy_main_back.routers.stock.mold.GetPaidStatusOkData": {
      is_paid: boolean;
      paid_unit?:
        | components["schemas"]["savvy_main_back.models.trade.PaidUnit"]
        | null;
    };
    "savvy_main_back.routers.taxonomy.selector.CreateInData": {
      /** Format: int64 */
      boundary_id: number;
      category_ids?: number[] | null;
      color?: string | null;
      name: string;
      /** Format: int64 */
      parent_id?: number | null;
      /** Format: int64 */
      realm_id: number;
    };
    "savvy_main_back.routers.trade.staple.GroupedByCategory": {
      category: components["schemas"]["savvy_main_back.models.taxonomy.Category"];
      staples: components["schemas"]["savvy_main_back.models.trade.Staple"][];
    };
    "savvy_main_back.routers.user.UpdateInData": {
      display_name?: string | null;
      profile?: Record<string, unknown> | null;
    };
    "savvy_main_back.shared.ErrorItem": {
      brief: string;
      detail?: string | null;
      entity: string;
      record_ids?: number[];
    };
    "savvy_main_back.shared.StatusInfo": {
      brief: string;
      /** Format: int32 */
      code: number;
      detail?: string | null;
      items?: components["schemas"]["savvy_main_back.shared.ErrorItem"][];
      name: string;
    };
    "savvy_main_back.things.builder.BuildParams": {
      cache_disabled?: boolean;
    };
    "savvy_main_back.things.trade.CalcAmount": {
      all_done: boolean;
      candidate_coupon_reminders?: {
        [key: string]: string;
      };
      coupons?: components["schemas"]["savvy_main_back.things.trade.CalcCoupon"][];
      currency?: string;
      final_amount?: string;
      original_amount?: string;
      reduced_amount?: string;
      tax_amount?: string;
      tax_behavior?: string;
    };
    "savvy_main_back.things.trade.CalcCoupon": {
      /** Format: int64 */
      coupon_id: number;
      currency: string;
      reduced_amount: string;
    };
    "savvy_main_back.things.trade.CalcDetail": {
      items: components["schemas"]["savvy_main_back.things.trade.CalcItem"][];
      tax_calculation: Record<string, never>;
      total_amount: components["schemas"]["savvy_main_back.things.trade.CalcAmount"];
    };
    "savvy_main_back.things.trade.CalcItem": {
      candidate_coupon_reminders?: {
        [key: string]: string;
      };
      coupons?: components["schemas"]["savvy_main_back.things.trade.CalcCoupon"][];
      currency?: string;
      entity?: string | null;
      factors?: Record<string, never>[];
      final_amount?: string;
      /** Format: int64 */
      id?: number | null;
      original_amount?: string;
      original_price: Record<string, never>;
      /** Format: int64 */
      parent_id?: number | null;
      price_kind?: string;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      record_id?: number | null;
      reduced_amount?: string;
      refer?: string;
      tax_amount?: string | null;
      tax_behavior?: string | null;
    };
    "savvy_main_back.things.trade.CalcPrice": {
      currency: string;
      factors?: components["schemas"]["savvy_main_back.things.trade.CalcItem"][];
      floating?:
        | ({
            kind: "savvy_main_back.things.trade.CalcPrice";
          } & Omit<
            components["schemas"]["savvy_main_back.models.trade.PriceFloating"],
            "kind"
          >)
        | null;
      value?: string | null;
    };
    "savvy_main_back.things.trade.NewCalcItem": {
      currency?: string;
      entity?: string | null;
      /** Format: int64 */
      id?: number | null;
      original_price?: string;
      /** Format: int64 */
      parent_id?: number | null;
      price_kind?: string;
      /** Format: int64 */
      quantity: number;
      /** Format: int64 */
      record_id?: number | null;
      refer?: string;
    };
    "savvy_main_back.utils.fs.UploadedData": {
      base: string;
      files: components["schemas"]["savvy_main_back.utils.fs.UploadedFile"][];
    };
    "savvy_main_back.utils.fs.UploadedFile": {
      hash?: string | null;
      key: string;
      path: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  "savvy_main_back.routers.account.update": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          display_name?: string | null;
          profile?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.access_token.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.AccessToken"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.access_token.delete": {
    parameters: {
      path: {
        /** @description Get parameter `token_id` from request url path. */
        token_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.access_token.update": {
    parameters: {
      path: {
        /** @description Get parameter `token_id` from request url path. */
        token_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          device?: string | null;
          name?: string;
          /** Format: int64 */
          user_id: number;
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.AccessToken"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.avatar.upload": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.avatar.delete": {
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.avatar.show": {
    parameters: {
      path: {
        /** @description Get parameter `width` from request url path. */
        width: number | null;
        /** @description Get parameter `height` from request url path. */
        height: number | null;
        /** @description Get parameter `ext` from request url path. */
        ext: string | null;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.complete_registration": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          display_name?: string;
          email?: string;
          /** Format: int64 */
          fws_id?: number;
          ident_name?: string;
          password?: string;
          phone?:
            | components["schemas"]["savvy_main_back.models.base.PostedPhone"]
            | null;
          profile?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.create": {
    parameters: {
      query?: {
        /** @description Get parameter `coupon_code` from request url query. */
        coupon_code?: string;
        /** @description Get parameter `referral_code` from request url query. */
        referral_code?: string;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          display_name: string;
          email?: components["schemas"]["savvy_main_back.models.base.PostedEmail"];
          hcaptcha_response?: string | null;
          ident_name: string;
          in_kernel?: boolean;
          password: string;
          phone?: components["schemas"]["savvy_main_back.models.base.PostedPhone"];
          profile?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.email.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Email>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.email.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Email"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.email.delete": {
    parameters: {
      path: {
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Email"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.email.update": {
    parameters: {
      path: {
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Email"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.email.resend_verification": {
    parameters: {
      path: {
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.email.set_master": {
    parameters: {
      path: {
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.find": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          email?: string;
          ident_name?: string;
          phone?: string;
          user?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.account.FindOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.interflow.stream.watched_ids": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": number[];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.interflow.stream.has_watched": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            has_watched: boolean;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.interflow.stream.unwatch": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.interflow.stream.watch": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.notification.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Notification>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.notification.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.notification.mark_all_read": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.notification.mark_read": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.notification.show": {
    parameters: {
      path: {
        /** @description Get parameter `notification_id` from request url path. */
        notification_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Notification"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.notification.delete": {
    parameters: {
      path: {
        /** @description Get parameter `notification_id` from request url path. */
        notification_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.oauth.authorize_and_bind": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code?: string;
          platform?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.OauthUser"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.oauth.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.OauthUser>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.oauth.remove": {
    parameters: {
      path: {
        /** @description Get parameter `oauth_user_id` from request url path. */
        oauth_user_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.phone.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Phone>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.phone.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Phone"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.phone.delete": {
    parameters: {
      path: {
        /** @description Get parameter `phone_id` from request url path. */
        phone_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Phone"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.phone.update": {
    parameters: {
      path: {
        /** @description Get parameter `phone_id` from request url path. */
        phone_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Phone"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.phone.resend_verification": {
    parameters: {
      path: {
        /** @description Get parameter `phone_id` from request url path. */
        phone_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.phone.set_master": {
    parameters: {
      path: {
        /** @description Get parameter `phone_id` from request url path. */
        phone_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  /**
   * @description
   * when user register and did not get verification email, allow user to call this method to resend verification email to the email address he/she used when registered.
   * this method is registered to public router, because user is not login, for only allow user to resend verification email
   * to himself, password is required.
   */
  "savvy_main_back.routers.account.resend_verification_email": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          password: string;
          /** Format: int64 */
          user_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.reset_password": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          password?: string;
          security_code?: string;
          /** Format: int64 */
          user_id?: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.send_security_code": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          email_id?: number | null;
          /** Format: int64 */
          phone_id?: number | null;
          /** Format: int64 */
          user_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.share_link.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.ShareLink>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.test_security_code": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          security_code?: string;
          /** Format: int64 */
          user_id?: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.account.TestSecurityCodeOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.update_ident_name": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          ident_name?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.update_password": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          current_password?: string;
          password?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            jwt_token: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.account.verify": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          email?: string;
          /** Format: int64 */
          fws_id?: number;
          phone?: string;
          token?: string;
          /** Format: int64 */
          user_id?: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.account.VerifyOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.auth.login": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          email?: string | null;
          hcaptcha_response?: string | null;
          ident_name?: string | null;
          password: string;
          user?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.auth.LoginOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.auth.logout": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.calc_mixture_hash": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.builder.CalcMixtureHashOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.bulk_cancel_build": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.list_statuses": {
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.cancel_build": {
    parameters: {
      path: {
        /** @description Get parameter `builder_id` from request url path. */
        builder_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.download_build_files": {
    parameters: {
      path: {
        /** @description Get parameter `builder_id` from request url path. */
        builder_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.list_logs": {
    parameters: {
      path: {
        /** @description Get parameter `builder_id` from request url path. */
        builder_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.status": {
    parameters: {
      path: {
        /** @description Get parameter `builder_id` from request url path. */
        builder_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.builder.update_status": {
    parameters: {
      path: {
        /** @description Get parameter `builder_id` from request url path. */
        builder_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.routers.builder.UpdateStatusData"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Builder"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Campaign>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          name: string;
          /** Format: int64 */
          realm_id: number;
          watermark?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Campaign"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.show": {
    parameters: {
      path: {
        /** @description Get parameter `campaign_id` from request url path. */
        campaign_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Campaign"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.delete": {
    parameters: {
      path: {
        /** @description Get parameter `campaign_id` from request url path. */
        campaign_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.update": {
    parameters: {
      path: {
        /** @description Get parameter `campaign_id` from request url path. */
        campaign_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          watermark?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Campaign"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.campaign.set_watermark": {
    parameters: {
      path: {
        /** @description Get parameter `campaign_id` from request url path. */
        campaign_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Campaign"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Creative>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          built_kind?: string | null;
          /** Format: int64 */
          campaign_id: number;
          description?: string | null;
          listener_ids?: number[] | null;
          mixture?: Record<string, never>;
          name: string;
          outputs?: components["schemas"]["savvy_main_back.routers.creative.CreateInOutput"][];
          /** Format: int64 */
          realm_id: number;
          signet?: string | null;
          watermark?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Creative"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.bulk_build": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.restore": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          from_builder_id: number;
          /** Format: int64 */
          from_creative_id: number;
          /** Format: int64 */
          target_origin_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.creative.RestoreOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.show": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Creative"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.delete": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.update": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          campaign_id?: number | null;
          controlled_by?: string | null;
          description?: string | null;
          listener_ids?: number[] | null;
          mixture?: Record<string, unknown> | null;
          name?: string | null;
          signet?: string | null;
          watermark?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Creative"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.upload_assets": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.utils.fs.UploadedData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.build": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.things.builder.BuildParams"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Builder"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.download_build_files": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.show_build_logs": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.list_build_results": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.build_result_poster": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
        /** @description Get parameter `builder` from request url path. */
        builder: string;
        /** @description Get parameter `output` from request url path. */
        output: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.build_result": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
        /** @description Get parameter `builder` from request url path. */
        builder: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
        /** @description Get parameter `builder` from request url path. */
        builder: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.calc_price": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.things.trade.CalcPrice"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.list_coupons": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Coupon>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.list_outputs": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Output>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.get_paid_status": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.creative.GetPaidStatusOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Creative"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.set_paid_status": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          invoice_id?: number | null;
          kind: string;
          /** Format: int64 */
          order_id?: number | null;
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.set_watermark": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Creative"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.creative.ensure_stream": {
    parameters: {
      path: {
        /** @description Get parameter `creative_id` from request url path. */
        creative_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.list_deploy_statuses": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.deploy.deployment.ResultStateItem"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Deployment>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          filters?: Record<string, never>;
          name: string;
          /** Format: int64 */
          realm_id?: number;
          resources?: Record<string, never>;
          status?: string;
          targets?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Deployment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.show": {
    parameters: {
      path: {
        /** @description Get parameter `deployment_id` from request url path. */
        deployment_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Deployment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.delete": {
    parameters: {
      path: {
        /** @description Get parameter `deployment_id` from request url path. */
        deployment_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.update": {
    parameters: {
      path: {
        /** @description Get parameter `deployment_id` from request url path. */
        deployment_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          filters?: Record<string, unknown> | null;
          name?: string | null;
          resources?: Record<string, unknown> | null;
          status?: string | null;
          targets?: Record<string, unknown> | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Deployment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.delete_results": {
    parameters: {
      path: {
        /** @description Get parameter `deployment_id` from request url path. */
        deployment_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.deployment.list_results": {
    parameters: {
      path: {
        /** @description Get parameter `deployment_id` from request url path. */
        deployment_id: number;
        /** @description Get parameter `kind` from request url path. */
        kind: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.filter.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          items?: Record<string, never>;
          name: string;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Filter"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.filter.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.filter.show": {
    parameters: {
      path: {
        /** @description Get parameter `filter_id` from request url path. */
        filter_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Filter"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.filter.delete": {
    parameters: {
      path: {
        /** @description Get parameter `filter_id` from request url path. */
        filter_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.target.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          items?: Record<string, never>;
          name: string;
          /** Format: int64 */
          realm_id?: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Target"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.target.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.target.show": {
    parameters: {
      path: {
        /** @description Get parameter `target_id` from request url path. */
        target_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.deploy.Target"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.deploy.target.delete": {
    parameters: {
      path: {
        /** @description Get parameter `target_id` from request url path. */
        target_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.email_message.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.EmailMessage>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.email_message.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.email_message.show": {
    parameters: {
      path: {
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.EmailMessage"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.email_message.delete": {
    parameters: {
      path: {
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.favorite.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          entity: string;
          extra?: Record<string, unknown> | null;
          keywords: string[];
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          record_id: number;
          /** Format: int64 */
          sort_rank?: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Favorite"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.favorite.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.favorite.delete": {
    parameters: {
      path: {
        /** @description Get parameter `favorite_id` from request url path. */
        favorite_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.favorite.update": {
    parameters: {
      path: {
        /** @description Get parameter `favorite_id` from request url path. */
        favorite_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          extra?: Record<string, unknown> | null;
          keywords: string[];
          /** Format: int64 */
          sort_rank?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Favorite"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.help.HelpVideo>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.routers.help_video.CreateIndData"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.help.HelpVideo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.show": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.help.HelpVideo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.delete": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.update": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          is_delisted?: boolean | null;
          label?: string | null;
          link?: string | null;
          name?: string | null;
          place?: string | null;
          poster?: string | null;
          /** Format: int64 */
          sort_rank?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.help.HelpVideo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.help_video.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.label.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Label>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.label.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          color?: string | null;
          name: string;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Label"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.label.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.label.show": {
    parameters: {
      path: {
        /** @description Get parameter `label_id` from request url path. */
        label_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Label"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.label.delete": {
    parameters: {
      path: {
        /** @description Get parameter `label_id` from request url path. */
        label_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.label.update": {
    parameters: {
      path: {
        /** @description Get parameter `label_id` from request url path. */
        label_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          color?: string | null;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Label"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.relation.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          reason?: string | null;
          /** Format: int64 */
          record_id: number;
          /** Format: int64 */
          stream_id?: number | null;
          /** Format: int64 */
          thread_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Relation"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.relation.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.relation.delete": {
    parameters: {
      path: {
        /** @description Get parameter `relation_id` from request url path. */
        relation_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.relation.update": {
    parameters: {
      path: {
        /** @description Get parameter `relation_id` from request url path. */
        relation_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          reason?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Relation"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Stream>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          attachments?: Record<string, never>;
          content?: Record<string, never>;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          is_internal?: boolean | null;
          kind: string;
          label_ids?: number[];
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          relations?:
            | {
                entity: string;
                reason?: string | null;
                /** Format: int64 */
                record_id: number;
              }[]
            | null;
          subject: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.show": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.update": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          is_recalled?: boolean | null;
          is_resolved?: boolean | null;
          label_ids?: number[] | null;
          subject?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.list_relations": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Relation>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.set_recalled": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.set_rejected": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.set_resolved": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.list_threads": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Thread>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.stream.get_timeline": {
    parameters: {
      path: {
        /** @description Get parameter `stream_id` from request url path. */
        stream_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            /** Format: int64 */
            offset: number;
            record: components["schemas"]["savvy_main_back.models.interflow.Thread"];
            /** Format: int64 */
            total: number;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Thread>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          at_ids?: number[];
          attachments?: Record<string, never>;
          content?: Record<string, never>;
          /** Format: int64 */
          initial_id?: number | null;
          is_internal?: boolean | null;
          kind?: string | null;
          label_ids?: number[];
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          replied_id?: number | null;
          /** Format: int64 */
          stream_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Thread"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.show": {
    parameters: {
      path: {
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Thread"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.update": {
    parameters: {
      path: {
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          at_ids?: number[];
          attachments?: Record<string, unknown> | null;
          content?: Record<string, unknown> | null;
          is_internal?: boolean | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Thread"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.list_relations": {
    parameters: {
      path: {
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Relation>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.set_recalled": {
    parameters: {
      path: {
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.set_rejected": {
    parameters: {
      path: {
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.interflow.thread.set_resolved": {
    parameters: {
      path: {
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.kernel": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Realm"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.oauth.authorize_url": {
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.oauth.authorize_and_login": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code?: string;
          platform?: string;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  /**
   * bind to exist user
   * @description bind to exist user
   */
  "savvy_main_back.routers.oauth.bind": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          oauth: {
            access_token: string;
            platform: string;
          };
          password?: string;
          token?: string;
          /** Format: int64 */
          user_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.oauth.BindOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.oauth.create_account_and_login": {
    parameters: {
      query?: {
        /** @description Get parameter `coupon_code` from request url query. */
        coupon_code?: string;
        /** @description Get parameter `referral_code` from request url query. */
        referral_code?: string;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          display_name: string;
          email?: components["schemas"]["savvy_main_back.models.base.PostedEmail"];
          /** Format: int64 */
          fws_id?: number;
          ident_name?: string | null;
          oauth_bind: components["schemas"]["savvy_main_back.routers.oauth.OauthBindData"];
          password?: string | null;
          profile?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.oauth.CreateAccountAndLoginOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.operation.show": {
    parameters: {
      path: {
        /** @description Get parameter `operation_id` from request url path. */
        operation_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bitrate?: string | null;
          codec?: string | null;
          /** Format: int64 */
          creative_id: number;
          description?: string | null;
          format: string;
          /** Format: double */
          frame_rate?: number | null;
          /** Format: int64 */
          height: number;
          max_bitrate?: string | null;
          metadata?: Record<string, never>;
          min_bitrate?: string | null;
          modifier_name?: string | null;
          name: string;
          /** Format: double */
          poster?: number | null;
          watermark?: string;
          /** Format: int64 */
          width: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Output"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.show": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Output"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.delete": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.update": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bitrate?: string | null;
          codec?: string | null;
          format?: string | null;
          /** Format: double */
          frame_rate?: number | null;
          /** Format: int64 */
          height?: number | null;
          max_bitrate?: string | null;
          min_bitrate?: string | null;
          modifier_name?: string | null;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          /** Format: int64 */
          width?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Output"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.comment.list": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Thread>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.comment.create": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          at_ids?: number[];
          attachments?: Record<string, never>;
          content?: Record<string, never>;
          is_internal?: boolean | null;
          label_ids?: number[];
          /** Format: int64 */
          replied_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Thread"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.comment.show": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Thread"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.comment.delete": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.comment.update": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
        /** @description Get parameter `thread_id` from request url path. */
        thread_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          at_ids?: number[];
          attachments?: Record<string, unknown> | null;
          content?: Record<string, unknown> | null;
          is_internal?: boolean | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Thread"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.output.ensure_stream": {
    parameters: {
      path: {
        /** @description Get parameter `output_id` from request url path. */
        output_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.answer.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Answer>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.answer.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          data?: Record<string, never>;
          description?: string | null;
          /** Format: int64 */
          owner_id?: number | null;
          /** Format: int64 */
          question_id: number;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Answer"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.answer.show": {
    parameters: {
      path: {
        /** @description Get parameter `answer_id` from request url path. */
        answer_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Answer"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.answer.delete": {
    parameters: {
      path: {
        /** @description Get parameter `answer_id` from request url path. */
        answer_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.answer.update": {
    parameters: {
      path: {
        /** @description Get parameter `answer_id` from request url path. */
        answer_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          data?: Record<string, unknown> | null;
          description?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Answer"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.category.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Category>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.category.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          data?: Record<string, never>;
          description?: string | null;
          name: string;
          /** Format: int64 */
          owner_id: number;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          title: string;
          /** Format: int64 */
          weight?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Category"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.category.show": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Category"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.category.delete": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.category.update": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          data?: Record<string, unknown> | null;
          description?: string | null;
          name?: string | null;
          /** Format: int64 */
          owner_id?: number | null;
          /** Format: int64 */
          parent_id?: number | null;
          title?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          /** Format: int64 */
          weight?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Category"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.category.list_questions": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Question>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.question.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.questionnaire.Question>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.question.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          category_id: number;
          data?: Record<string, never>;
          description?: string | null;
          entity: string;
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          record_id: number;
          title: string;
          /** Format: int64 */
          weight?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Question"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.question.show": {
    parameters: {
      path: {
        /** @description Get parameter `question_id` from request url path. */
        question_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Question"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.question.delete": {
    parameters: {
      path: {
        /** @description Get parameter `question_id` from request url path. */
        question_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.question.update": {
    parameters: {
      path: {
        /** @description Get parameter `question_id` from request url path. */
        question_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          category_id?: number | null;
          data?: Record<string, unknown> | null;
          description?: string | null;
          title?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          /** Format: int64 */
          weight?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.questionnaire.Question"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.upload": {
    parameters: {
      query: {
        /** @description Get parameter `realm_id` from request url query. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.questionnaire.serve_file": {
    parameters: {
      query: {
        /** @description Get parameter `realm_id` from request url query. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Realm>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          kind: string;
          name?: string;
          profile?: Record<string, never>;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Realm"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.show": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Realm"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.delete": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.update": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          /** Format: int64 */
          max_allowed_mixture_duration?: number | null;
          name?: string | null;
          profile?: Record<string, never>;
          root_ids?: number[] | null;
          steward_ids?: number[] | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Realm"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.add": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.show_address": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Address"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.upsert_address": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          city?: string | null;
          country: string;
          /** Format: int64 */
          id?: number | null;
          line1?: string | null;
          line2?: string | null;
          post_code?: string | null;
          /** Format: int64 */
          realm_id: number;
          state?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Address"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.list_allow_added_stewards": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.list_allow_added_users": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.bucket.upload": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.utils.fs.UploadedData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.bucket.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list_campaigns": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Campaign>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.convert": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          kind: string;
          name: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Realm"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list_creatives": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Creative>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.deploy.list_deployments": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Deployment>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.deploy.list_filters": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Filter>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.deploy.list_targets": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.deploy.Target>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list_favorites": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Favorite>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.interflow.list_labels": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Label>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.interflow.list_streams": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Stream>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.interflow.list_threads": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Thread>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.oauth.exchange_token": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code?: string;
          platform?: string;
          shop?: string | null;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.oauth.refresh_token": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.OauthRealmAccess"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.oauth_access.list": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.OauthRealmAccess>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.oauth_access.delete": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
        /** @description Get parameter `oauth_access_id` from request url path. */
        oauth_access_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list_operations": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list_outputs": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.Output>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.remove": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.list_roles": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Role>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.list_roots": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.list_stewards": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stock.list_blueprints": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Blueprint>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stock.list_fonts": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Font>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stock.serve_font_file": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stripe.show_customer_id": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            customer_id: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stripe.list_payment_methods": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stripe.set_default_payment_method": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          payment_method_id: string;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stripe.list_tax_ids": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stripe.create_tax_id": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          kind: string;
          value: string;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.stripe.delete_tax_id": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
        /** @description Get parameter `tax_id` from request url path. */
        tax_id: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.list_orders": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Order>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.list_payments": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Payment>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.list_receipts": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Receipt>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.list_shopping_items": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.ShoppingItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.create_shopping_items": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.routers.realm.trade.CreateShoppingItemsInItem"][];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ShoppingItem"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.delete_shopping_items": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.trade.update_shopping_item": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
        /** @description Get parameter `item_id` from request url path. */
        item_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          checked?: boolean | null;
          /** Format: int64 */
          created_by?: number | null;
          demand?: Record<string, unknown> | null;
          description?: string | null;
          entity?: string | null;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          quantity?: number | null;
          /** Format: int64 */
          record_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ShoppingItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.user.list": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.wallet.list_obtained_coupons": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.wallet.ObtainedCoupon>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.realm.wallet.obtain_coupon": {
    parameters: {
      path: {
        /** @description Get parameter `realm_id` from request url path. */
        realm_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          coupon_code: string;
          description?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.wallet.ObtainedCoupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Role>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          name: string;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Role"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.show": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Role"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.delete": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.update": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Role"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.user.add": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.permission.list": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.permission.update": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.routers.role.permission.UpdateInItem"][];
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.user.remove": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.role.user.list": {
    parameters: {
      path: {
        /** @description Get parameter `role_id` from request url path. */
        role_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.server.cleanup.creative_versions_status": {
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.server.cleanup.delete_creative_old_versions": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.server.farm_node.list": {
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.server.farm_node.show": {
    parameters: {
      path: {
        /** @description Get parameter `node_id` from request url path. */
        node_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.server.farm_node.terminate": {
    parameters: {
      path: {
        /** @description Get parameter `node_id` from request url path. */
        node_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.share_link.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          blueprint_ids?: number[];
          campaign_ids?: number[];
          code?: string | null;
          creative_ids?: number[];
          /** Format: int64 */
          expired_after_days?: number;
          /** Format: int64 */
          expired_after_months?: number;
          /** Format: int64 */
          expired_after_years?: number;
          name?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.ShareLink"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.share_link.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.share_link.show": {
    parameters: {
      path: {
        /** @description Get parameter `hash` from request url path. */
        hash: string;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            all_creative_ids: number[];
            campaign_ids: number[];
            code?: string | null;
            /** Format: date-time */
            created_at: string;
            /** Format: int64 */
            created_by?: number | null;
            creative_ids: number[];
            /** Format: date-time */
            expires_at?: string | null;
            hash: string;
            /** Format: int64 */
            id: number;
            name?: string | null;
            /** Format: int64 */
            owner_id: number;
            /** Format: date-time */
            updated_at: string;
            /** Format: int64 */
            updated_by?: number | null;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.share_link.delete": {
    parameters: {
      path: {
        /** @description Get parameter `link_id` from request url path. */
        link_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.share_link.update": {
    parameters: {
      path: {
        /** @description Get parameter `link_id` from request url path. */
        link_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          campaign_ids?: number[] | null;
          code?: string | null;
          creative_ids?: number[] | null;
          /** Format: int64 */
          expired_after_days?: number | null;
          /** Format: int64 */
          expired_after_months?: number | null;
          /** Format: int64 */
          expired_after_years?: number | null;
          name?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.ShareLink"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.steward.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Steward>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.steward.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          auto_assignable: boolean;
          is_supervisor: boolean;
          /** Format: int64 */
          user_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Steward"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.steward.list_allow_added_users": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.steward.delete": {
    parameters: {
      path: {
        /** @description Get parameter `steward_id` from request url path. */
        steward_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.steward.update": {
    parameters: {
      path: {
        /** @description Get parameter `steward_id` from request url path. */
        steward_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          auto_assignable: boolean;
          is_supervisor: boolean;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Steward"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Audio>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.upload": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Audio"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.show": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Audio"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.delete": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.update": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          controlled_by?: string | null;
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          usage?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Audio"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Audio"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Audio"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Audio"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.audio.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `audio_id` from request url path. */
        audio_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Blueprint>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          built_kind?: string | null;
          demand?: Record<string, unknown> | null;
          description?: string | null;
          exhibit_ids?: number[];
          extra?: Record<string, unknown> | null;
          is_disabled?: boolean;
          is_prototype?: boolean;
          keywords?: string[];
          label_ids?: number[];
          metadata?: Record<string, never>;
          mixture?: Record<string, unknown> | null;
          name: string;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          recast_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.get_timeline": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            /** Format: int64 */
            offset: number;
            record: components["schemas"]["savvy_main_back.models.stock.Blueprint"];
            /** Format: int64 */
            total: number;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.show": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.delete": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.update": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          built_kind?: string | null;
          controlled_by?: string | null;
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          hash?: string | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          metadata?: Record<string, unknown> | null;
          mixture?: Record<string, unknown> | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          /** Format: int64 */
          version?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.build": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.things.builder.BuildParams"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Builder"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.show_build_logs": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.feed_example": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.get_metadata": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.upload_package": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.download_package": {
    parameters: {
      query?: {
        /** @description Get parameter `version` from request url query. */
        version?: number;
      };
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
        /** @description Get parameter `version` from request url path. */
        version: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.get_paid_status": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            is_paid: boolean;
            paid_unit?:
              | components["schemas"]["savvy_main_back.models.trade.PaidUnit"]
              | null;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.set_paid_status": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          invoice_id?: number | null;
          kind: string;
          /** Format: int64 */
          order_id?: number | null;
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": boolean;
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Blueprint"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.blueprint.ensure_stream": {
    parameters: {
      path: {
        /** @description Get parameter `blueprint_id` from request url path. */
        blueprint_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Exhibit>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          controlled_by?: string | null;
          demand: Record<string, never>;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          finish?: Record<string, unknown> | null;
          /** Format: int64 */
          invoice_id?: number | null;
          /** Format: int64 */
          invoice_item_id?: number | null;
          keywords?: string[];
          label_ids?: number[];
          name: string;
          /** Format: int64 */
          order_id?: number | null;
          /** Format: int64 */
          order_item_id?: number | null;
          /** Format: int64 */
          owner_id?: number | null;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          recast_id: number;
          /** Format: int64 */
          recast_item_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Exhibit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.show": {
    parameters: {
      path: {
        /** @description Get parameter `exhibit_id` from request url path. */
        exhibit_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Exhibit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.delete": {
    parameters: {
      path: {
        /** @description Get parameter `exhibit_id` from request url path. */
        exhibit_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.update": {
    parameters: {
      path: {
        /** @description Get parameter `exhibit_id` from request url path. */
        exhibit_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          controlled_by?: string | null;
          demand?: Record<string, unknown> | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          finish?: Record<string, unknown> | null;
          /** Format: int64 */
          invoice_id?: number | null;
          /** Format: int64 */
          invoice_item_id?: number | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          name?: string | null;
          /** Format: int64 */
          order_id?: number | null;
          /** Format: int64 */
          order_item_id?: number | null;
          /** Format: int64 */
          owner_id?: number | null;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: int64 */
          recast_item_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Exhibit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.force_paid": {
    parameters: {
      path: {
        /** @description Get parameter `exhibit_id` from request url path. */
        exhibit_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          reason: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Exhibit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.exhibit.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `exhibit_id` from request url path. */
        exhibit_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Exhibit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Font>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.upload": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Font"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.show": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Font"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.delete": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.update": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          controlled_by?: string | null;
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Font"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Font"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Font"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.font.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `font_id` from request url path. */
        font_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Font"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Image>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.upload": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Image"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.show": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Image"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.delete": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.update": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          controlled_by?: string | null;
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          usage?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Image"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Image"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Image"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Image"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.image.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `image_id` from request url path. */
        image_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.label.list": {
    parameters: {
      query: {
        /** @description Get parameter `realm_id` from request url query. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Label>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.label.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          color?: string | null;
          name: string;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Label"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.label.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.label.show": {
    parameters: {
      path: {
        /** @description Get parameter `label_id` from request url path. */
        label_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Label"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.label.delete": {
    parameters: {
      path: {
        /** @description Get parameter `label_id` from request url path. */
        label_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.label.update": {
    parameters: {
      path: {
        /** @description Get parameter `label_id` from request url path. */
        label_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          color?: string | null;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Label"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Mold>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          built_kind?: string | null;
          demand?: Record<string, unknown> | null;
          description?: string | null;
          exhibit_ids?: number[];
          extra?: Record<string, unknown> | null;
          is_disabled?: boolean;
          is_prototype?: boolean;
          kind?: string;
          label_ids?: number[];
          metadata?: Record<string, never>;
          mixture?: Record<string, unknown> | null;
          name: string;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          recast_id?: number | null;
          usage?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.show": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.delete": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.update": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          built_kind?: string | null;
          controlled_by?: string | null;
          demand?: Record<string, unknown> | null;
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          hash?: string | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          kind?: string | null;
          label_ids?: number[] | null;
          metadata?: Record<string, unknown> | null;
          mixture?: Record<string, unknown> | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          usage?: string | null;
          /** Format: int64 */
          version?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.build": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.things.builder.BuildParams"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.studio.Builder"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.show_build_logs": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.get_metadata": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.upload_package": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.download_package": {
    parameters: {
      query?: {
        /** @description Get parameter `version` from request url query. */
        version?: number;
      };
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
        /** @description Get parameter `version` from request url path. */
        version: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.get_paid_status": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.routers.stock.mold.GetPaidStatusOkData"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.set_paid_status": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          invoice_id?: number | null;
          kind: string;
          /** Format: int64 */
          order_id?: number | null;
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": boolean;
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.mold.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `mold_id` from request url path. */
        mold_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Mold"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.RecastFactor>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bedge?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          keywords?: string[];
          label_ids?: number[];
          /** Format: int64 */
          max_quantity?: number | null;
          /** Format: int64 */
          min_quantity?: number | null;
          name: string;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          sort_rank?: number;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.RecastFactor"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.show": {
    parameters: {
      path: {
        /** @description Get parameter `factor_id` from request url path. */
        factor_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.RecastFactor"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.delete": {
    parameters: {
      path: {
        /** @description Get parameter `factor_id` from request url path. */
        factor_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.update": {
    parameters: {
      path: {
        /** @description Get parameter `factor_id` from request url path. */
        factor_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bedge?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          /** Format: int64 */
          max_quantity?: number | null;
          /** Format: int64 */
          min_quantity: number;
          name: string;
          /** Format: int64 */
          sort_rank?: number;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.RecastFactor"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_factor.list_items": {
    parameters: {
      path: {
        /** @description Get parameter `factor_id` from request url path. */
        factor_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.RecastItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_item.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bedge?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          /** Format: int64 */
          factor_id: number;
          /** Format: int64 */
          max_quantity?: number | null;
          /** Format: int64 */
          min_quantity?: number | null;
          name: string;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          sort_rank?: number;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.RecastItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_item.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_item.show": {
    parameters: {
      path: {
        /** @description Get parameter `item_id` from request url path. */
        item_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.RecastItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_item.delete": {
    parameters: {
      path: {
        /** @description Get parameter `item_id` from request url path. */
        item_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_item.update": {
    parameters: {
      path: {
        /** @description Get parameter `item_id` from request url path. */
        item_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bedge?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          /** Format: int64 */
          factor_id?: number | null;
          /** Format: int64 */
          max_quantity?: number | null;
          /** Format: int64 */
          min_quantity?: number | null;
          name: string;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          sort_rank?: number;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.RecastItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast_item.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `item_id` from request url path. */
        item_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Recast>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bedge?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          factor_ids: number[];
          keywords?: string[];
          label_ids?: number[];
          name: string;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Recast"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.show": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Recast"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.delete": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.update": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bedge?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          factor_ids?: number[] | null;
          keywords?: string[];
          label_ids?: number[] | null;
          name?: string | null;
          title?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Recast"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.calc_max_price": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            unit: string;
            value: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.calc_min_price": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            unit: string;
            value: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.calc_price_range": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            max_value: string;
            min_value: string;
            unit: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.recast.list_factors": {
    parameters: {
      path: {
        /** @description Get parameter `recast_id` from request url path. */
        recast_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.RecastFactor>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Stylekit>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          colors?: Record<string, unknown> | null;
          demand?: Record<string, unknown> | null;
          description?: string | null;
          exhibit_ids?: number[];
          extra?: Record<string, unknown> | null;
          fonts?: Record<string, unknown> | null;
          is_disabled: boolean;
          is_prototype: boolean;
          is_public: boolean;
          keywords: string[];
          label_ids?: number[];
          logos?: Record<string, unknown> | null;
          name: string;
          /** Format: int64 */
          owner_id: number;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          recast_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Stylekit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.show": {
    parameters: {
      path: {
        /** @description Get parameter `stylekit_id` from request url path. */
        stylekit_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Stylekit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.delete": {
    parameters: {
      path: {
        /** @description Get parameter `stylekit_id` from request url path. */
        stylekit_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.update": {
    parameters: {
      path: {
        /** @description Get parameter `stylekit_id` from request url path. */
        stylekit_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          colors?: Record<string, unknown> | null;
          controlled_by?: string | null;
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          fonts?: Record<string, unknown> | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          logos?: Record<string, unknown> | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Stylekit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `stylekit_id` from request url path. */
        stylekit_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Stylekit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.stylekit.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `stylekit_id` from request url path. */
        stylekit_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Stylekit"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.upload": {
    parameters: {
      query: {
        /** @description Get parameter `realm_id` from request url query. */
        realm_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            audio?:
              | components["schemas"]["savvy_main_back.models.stock.Audio"]
              | null;
            blueprint?:
              | components["schemas"]["savvy_main_back.models.stock.Blueprint"]
              | null;
            font?:
              | components["schemas"]["savvy_main_back.models.stock.Font"]
              | null;
            image?:
              | components["schemas"]["savvy_main_back.models.stock.Image"]
              | null;
            mold?:
              | components["schemas"]["savvy_main_back.models.stock.Mold"]
              | null;
            video?:
              | components["schemas"]["savvy_main_back.models.stock.Video"]
              | null;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.stock.Video>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.upload": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Video"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.show": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Video"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.delete": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.update": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          exhibit_ids?: number[] | null;
          extra?: Record<string, unknown> | null;
          is_disabled?: boolean | null;
          is_prototype?: boolean | null;
          is_public?: boolean | null;
          keywords?: string[] | null;
          label_ids?: number[] | null;
          name?: string | null;
          /** Format: int64 */
          prototype_id?: number | null;
          /** Format: int64 */
          recast_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          usage?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Video"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.progress": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Video"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Video"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.set_public": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.stock.Video"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stock.video.serve_file": {
    parameters: {
      path: {
        /** @description Get parameter `video_id` from request url path. */
        video_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.setup_intent.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.payment_intent.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          payment_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.payment_intent.confirm": {
    parameters: {
      path: {
        /** @description Get parameter `intent_id` from request url path. */
        intent_id: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.payment_method.attach": {
    parameters: {
      path: {
        /** @description Get parameter `payment_method_id` from request url path. */
        payment_method_id: string;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.payment_method.detach": {
    parameters: {
      path: {
        /** @description Get parameter `payment_method_id` from request url path. */
        payment_method_id: string;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.public_key": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            public_key: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.stripe.webhook.listen": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.boundary.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.Boundary>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.boundary.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code: string;
          color?: string | null;
          description?: string | null;
          name: string;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Boundary"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.boundary.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.boundary.show": {
    parameters: {
      path: {
        /** @description Get parameter `boundary_id` from request url path. */
        boundary_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Boundary"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.boundary.delete": {
    parameters: {
      path: {
        /** @description Get parameter `boundary_id` from request url path. */
        boundary_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.boundary.update": {
    parameters: {
      path: {
        /** @description Get parameter `boundary_id` from request url path. */
        boundary_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code?: string | null;
          color?: string | null;
          description?: string | null;
          name?: string | null;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Boundary"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.Category>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          boundary_id: number;
          color?: string | null;
          description?: string | null;
          name: string;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Category"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.list_items": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.CategoryItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.show": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Category"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.delete": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.update": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          boundary_id: number;
          color?: string | null;
          description?: string | null;
          name?: string | null;
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Category"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.add_item": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          /** Format: int64 */
          record_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.CategoryItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.category.remove_items": {
    parameters: {
      path: {
        /** @description Get parameter `category_id` from request url path. */
        category_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          record_ids: number[];
        }[];
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.selector.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.taxonomy.Selector>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.selector.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.routers.taxonomy.selector.CreateInData"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Selector"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.selector.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.selector.show": {
    parameters: {
      path: {
        /** @description Get parameter `selector_id` from request url path. */
        selector_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Selector"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.selector.delete": {
    parameters: {
      path: {
        /** @description Get parameter `selector_id` from request url path. */
        selector_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.taxonomy.selector.update": {
    parameters: {
      path: {
        /** @description Get parameter `selector_id` from request url path. */
        selector_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          category_ids?: number[] | null;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.taxonomy.Selector"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.calc_amount": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.things.trade.NewCalcItem"][];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.things.trade.CalcDetail"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.contract.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          paid_through: string;
          paypal_subscription_id?: string | null;
          /** Format: int64 */
          realm_id: number;
          /** Format: int64 */
          record_id: number;
          stripe_payment_method_id?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Contract"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.contract.show": {
    parameters: {
      path: {
        /** @description Get parameter `contract_id` from request url path. */
        contract_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Contract"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.contract.cancel": {
    parameters: {
      path: {
        /** @description Get parameter `contract_id` from request url path. */
        contract_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Coupon>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code: string;
          description?: string | null;
          /** Format: int64 */
          expires_after_usable?: number | null;
          /** Format: date-time */
          expires_at?: string | null;
          is_delisted?: boolean;
          /** Format: int64 */
          layer?: number;
          name: string;
          obtained_mode?: string | null;
          options?: Record<string, never>;
          /** Format: int64 */
          period?: number;
          /** Format: int64 */
          priority?: number;
          /** Format: int64 */
          realm_count_limit?: number | null;
          script: components["schemas"]["savvy_main_back.models.Script"];
          /** Format: date-time */
          started_at?: string | null;
          /** Format: int64 */
          total_count_limit?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Coupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.show": {
    parameters: {
      path: {
        /** @description Get parameter `coupon_id` from request url path. */
        coupon_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Coupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.delete": {
    parameters: {
      path: {
        /** @description Get parameter `coupon_id` from request url path. */
        coupon_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.update": {
    parameters: {
      path: {
        /** @description Get parameter `coupon_id` from request url path. */
        coupon_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code?: string | null;
          description?: string | null;
          /** Format: int64 */
          expires_after_usable?: number | null;
          /** Format: date-time */
          expires_at?: string | null;
          is_delisted?: boolean | null;
          /** Format: int64 */
          layer?: number | null;
          name?: string | null;
          obtained_mode?: string | null;
          options?: Record<string, unknown> | null;
          /** Format: int64 */
          period?: number | null;
          /** Format: int64 */
          priority?: number | null;
          /** Format: int64 */
          realm_count_limit?: number | null;
          script?: Record<string, unknown> | null;
          /** Format: date-time */
          started_at?: string | null;
          /** Format: int64 */
          total_count_limit?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Coupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.list_items": {
    parameters: {
      path: {
        /** @description Get parameter `coupon_id` from request url path. */
        coupon_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.CouponItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.add_item": {
    parameters: {
      path: {
        /** @description Get parameter `coupon_id` from request url path. */
        coupon_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          /** Format: int64 */
          record_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.CouponItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.coupon.remove_item": {
    parameters: {
      path: {
        /** @description Get parameter `coupon_id` from request url path. */
        coupon_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          /** Format: int64 */
          record_id: number;
        };
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Invoice>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          coupon_ids?: number[];
          demand?: Record<string, unknown> | null;
          description?: string | null;
          /** Format: date-time */
          due_date?: string | null;
          items: {
            actual_price: string;
            coupon_ids?: number[];
            demand?: Record<string, unknown> | null;
            description?: string | null;
            entity?: string | null;
            factors?: Record<string, never>;
            final_amount: string;
            original_price: string;
            /** Format: int64 */
            parent_index?: number | null;
            price_kind?: string;
            /** Format: int64 */
            quantity: number;
            /** Format: int64 */
            record_id?: number | null;
            title: string;
          }[];
          /** Format: int64 */
          realm_id: number;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Invoice"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.show": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Invoice"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.delete": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.update": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          title?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Invoice"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.force_paid": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          reason: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Invoice"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.list_items": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.InvoiceItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.upsert_items": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          coupon_ids?: number[];
          demand?: Record<string, unknown> | null;
          description?: string | null;
          entity?: string | null;
          factors?: Record<string, never>;
          final_amount: string;
          original_price: string;
          /** Format: int64 */
          parent_id?: number | null;
          price_kind?: string;
          /** Format: int64 */
          quantity: number;
          /** Format: int64 */
          record_id?: number | null;
          title: string;
        }[];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            invoice: components["schemas"]["savvy_main_back.models.trade.Invoice"];
            items: components["schemas"]["savvy_main_back.models.trade.InvoiceItem"][];
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.remove_items": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.list_refund_items": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.RefundItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.list_relations": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.interflow.Relation>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.list_shipments": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Shipment>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.invoice.ensure_stream": {
    parameters: {
      path: {
        /** @description Get parameter `invoice_id` from request url path. */
        invoice_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Order>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          coupon_codes?: string[];
          demand?: Record<string, unknown> | null;
          description?: string | null;
          flow_kind?: string | null;
          items: {
            demand?: Record<string, unknown> | null;
            description?: string | null;
            entity?: string | null;
            /** Format: int64 */
            exhibit_id?: number | null;
            factors?: Record<string, unknown> | null;
            original_price?: string | null;
            parent_index?: number | null;
            price_kind?: string;
            /** Format: int64 */
            quantity: number;
            /** Format: int64 */
            record_id?: number | null;
            title: string;
          }[];
          /** Format: int64 */
          parent_id?: number | null;
          /** Format: int64 */
          realm_id: number;
          title?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.show": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.delete": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.update": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          demand?: Record<string, unknown> | null;
          description?: string | null;
          title?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.list_activities": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.OrderActivity>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.add_activity": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          actor_id?: number | null;
          content: Record<string, never>;
          description?: string | null;
          title: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.OrderActivity"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.remove_activities": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.cancel": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.confirm_price": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.force_paid": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          reason: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.list_items": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.OrderItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.list_refund_items": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.RefundItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.list_relations": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.OrderRelation>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.add_relation": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          entity: string;
          /** Format: int64 */
          order_item_id?: number | null;
          reason?: string | null;
          /** Format: int64 */
          record_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.OrderRelation"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.remove_relations": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.set_flow_status": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.set_price": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          items: {
            actual_price: string;
            coupon_ids: number[];
            currency?: string | null;
            demand?: Record<string, unknown> | null;
            description?: string | null;
            entity?: string | null;
            /** Format: int64 */
            exhibit_id?: number | null;
            factors?: Record<string, unknown> | null;
            /** Format: int64 */
            id?: number | null;
            original_price?: string | null;
            /** Format: int64 */
            parent_id?: number | null;
            /** Format: int64 */
            quantity?: number | null;
            /** Format: int64 */
            record_id?: number | null;
            title?: string | null;
          }[];
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Order"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.list_shipments": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Shipment>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.order.ensure_stream": {
    parameters: {
      path: {
        /** @description Get parameter `order_id` from request url path. */
        order_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.interflow.Stream"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.payment.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Payment>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.payment.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          currency?: string;
          description?: string | null;
          invoice_ids?: number[];
          order_ids?: number[];
          paid_through?: string;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Payment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.payment.show": {
    parameters: {
      path: {
        /** @description Get parameter `payment_id` from request url path. */
        payment_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Payment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.payment.update": {
    parameters: {
      path: {
        /** @description Get parameter `payment_id` from request url path. */
        payment_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          flow_status?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Payment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.price.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          currency: string;
          description?: string | null;
          entity: string;
          /** Format: date-time */
          expires_at?: string | null;
          extra?: Record<string, unknown> | null;
          floating?:
            | ({
                kind: "json";
              } & Omit<
                components["schemas"]["savvy_main_back.models.trade.PriceFloating"],
                "kind"
              >)
            | null;
          /** Format: int64 */
          invoice_id?: number | null;
          /** Format: int64 */
          invoice_item_id?: number | null;
          is_disabled?: boolean;
          kind: string;
          /** Format: int64 */
          order_id?: number | null;
          /** Format: int64 */
          order_item_id?: number | null;
          /** Format: int64 */
          priority?: number | null;
          /** Format: int64 */
          record_id: number;
          recurring?:
            | components["schemas"]["savvy_main_back.models.trade.PriceRecurring"]
            | null;
          /** Format: date-time */
          started_at?: string | null;
          tax_behavior?: string | null;
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Price"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.price.show": {
    parameters: {
      path: {
        /** @description Get parameter `price_id` from request url path. */
        price_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Price"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.price.delete": {
    parameters: {
      path: {
        /** @description Get parameter `price_id` from request url path. */
        price_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.price.update": {
    parameters: {
      path: {
        /** @description Get parameter `price_id` from request url path. */
        price_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          currency?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          floating?: Record<string, unknown> | null;
          is_disabled?: boolean | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
          value?: string | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Price"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.ProductBundle>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          extra?: Record<string, unknown> | null;
          is_delisted: boolean;
          name: string;
          product_ids?: number[] | null;
          /** Format: int64 */
          sort_rank?: number;
          troupe_ids?: number[] | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ProductBundle"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.show": {
    parameters: {
      path: {
        /** @description Get parameter `bundle_id` from request url path. */
        bundle_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ProductBundle"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.delete": {
    parameters: {
      path: {
        /** @description Get parameter `bundle_id` from request url path. */
        bundle_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.calc_max_price": {
    parameters: {
      path: {
        /** @description Get parameter `bundle_id` from request url path. */
        bundle_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            unit: string;
            value: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.calc_min_price": {
    parameters: {
      path: {
        /** @description Get parameter `bundle_id` from request url path. */
        bundle_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            unit: string;
            value: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.calc_price_range": {
    parameters: {
      path: {
        /** @description Get parameter `bundle_id` from request url path. */
        bundle_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            max_value: string;
            min_value: string;
            unit: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_bundle.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `bundle_id` from request url path. */
        bundle_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.ProductTroupe>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          bundle_ids?: number[] | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          is_delisted: boolean;
          name: string;
          product_ids?: number[] | null;
          /** Format: int64 */
          sort_rank?: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ProductTroupe"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.show": {
    parameters: {
      path: {
        /** @description Get parameter `troupe_id` from request url path. */
        troupe_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ProductTroupe"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.delete": {
    parameters: {
      path: {
        /** @description Get parameter `troupe_id` from request url path. */
        troupe_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.calc_max_price": {
    parameters: {
      path: {
        /** @description Get parameter `troupe_id` from request url path. */
        troupe_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            unit: string;
            value: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.calc_min_price": {
    parameters: {
      path: {
        /** @description Get parameter `troupe_id` from request url path. */
        troupe_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            unit: string;
            value: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.calc_price_range": {
    parameters: {
      path: {
        /** @description Get parameter `troupe_id` from request url path. */
        troupe_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            max_value: string;
            min_value: string;
            unit: string;
          };
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product_troupe.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `troupe_id` from request url path. */
        troupe_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Product>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          benefits?:
            | components["schemas"]["savvy_main_back.models.trade.ProductBenefits"]
            | null;
          code: string;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          is_delisted: boolean;
          kind?: string | null;
          name: string;
          /** Format: int64 */
          parent_id?: number | null;
          recurring?:
            | components["schemas"]["savvy_main_back.models.trade.ProductRecurring"]
            | null;
          /** Format: int64 */
          sort_rank: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Product"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.show": {
    parameters: {
      path: {
        /** @description Get parameter `product_id` from request url path. */
        product_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Product"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.delete": {
    parameters: {
      path: {
        /** @description Get parameter `product_id` from request url path. */
        product_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.update": {
    parameters: {
      path: {
        /** @description Get parameter `product_id` from request url path. */
        product_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          code?: string | null;
          description?: string | null;
          extra?: Record<string, unknown> | null;
          is_delisted: boolean;
          name?: string | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Product"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.calc_price": {
    parameters: {
      path: {
        /** @description Get parameter `product_id` from request url path. */
        product_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.things.trade.CalcPrice"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.list_coupons": {
    parameters: {
      path: {
        /** @description Get parameter `product_id` from request url path. */
        product_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Coupon>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.product.list_prices": {
    parameters: {
      path: {
        /** @description Get parameter `product_id` from request url path. */
        product_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Price>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.receipt.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Receipt>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.receipt.show": {
    parameters: {
      path: {
        /** @description Get parameter `receipt_id` from request url path. */
        receipt_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Receipt"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.refund_item.show": {
    parameters: {
      path: {
        /** @description Get parameter `item_id` from request url path. */
        item_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.RefundItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.refund.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Refund>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.refund.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          payment_id: number;
          reason?: string | null;
          refund_items: {
            amount?: string;
            currency?: string;
            /** Format: int64 */
            invoice_id?: number | null;
            /** Format: int64 */
            invoice_item_id?: number | null;
            /** Format: int64 */
            order_id?: number | null;
            /** Format: int64 */
            order_item_id?: number | null;
            reason?: string | null;
          }[];
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Refund"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.refund.show": {
    parameters: {
      path: {
        /** @description Get parameter `refund_id` from request url path. */
        refund_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Refund"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.refund.list_items": {
    parameters: {
      path: {
        /** @description Get parameter `refund_id` from request url path. */
        refund_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.RefundItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          items: {
            description?: string | null;
            entity: string;
            /** Format: int64 */
            quantity?: number | null;
            /** Format: int64 */
            record_id: number;
          }[];
          /** Format: int64 */
          order_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Shipment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.show": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Shipment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.delete": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.update": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          status: string;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Shipment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.list_items": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.ShipmentItem>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.add_item": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          entity: string;
          /** Format: int64 */
          quantity?: number | null;
          /** Format: int64 */
          record_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.ShipmentItem"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.remove_items": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.shipment.set_status": {
    parameters: {
      path: {
        /** @description Get parameter `shipment_id` from request url path. */
        shipment_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Shipment"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.trade.Staple>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          category_id: number;
          entity: string;
          /** Format: int64 */
          record_id: number;
          /** Format: int64 */
          sort_rank: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Staple"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.list_grouped_by_category": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.routers.trade.staple.GroupedByCategory>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.show": {
    parameters: {
      path: {
        /** @description Get parameter `staple_id` from request url path. */
        staple_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Staple"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.delete": {
    parameters: {
      path: {
        /** @description Get parameter `staple_id` from request url path. */
        staple_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.trade.staple.update": {
    parameters: {
      path: {
        /** @description Get parameter `staple_id` from request url path. */
        staple_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          category_id?: number | null;
          /** Format: int64 */
          record_id?: number | null;
          /** Format: int64 */
          sort_rank?: number | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.trade.Staple"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.User>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.create": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          display_name: string;
          email?: components["schemas"]["savvy_main_back.models.base.PostedEmail"];
          ident_name: string;
          oauth_bind?: {
            access_token: string;
            platform: string;
          } | null;
          password?: string;
          phone?: components["schemas"]["savvy_main_back.models.base.PostedPhone"];
          profile?: Record<string, unknown> | null;
          /** Format: int64 */
          realm_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.invite": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          display_name: string;
          email?: string;
          in_kernel?: boolean;
          profile?: Record<string, never>;
          /** Format: int64 */
          realm_id?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.is_other_taken": {
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.show": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.delete": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.update": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["savvy_main_back.routers.user.UpdateInData"];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.avatar.upload": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.avatar.delete": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.avatar.show": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
        /** @description Get parameter `width` from request url path. */
        width: number;
        /** @description Get parameter `height` from request url path. */
        height: number;
        /** @description Get parameter `ext` from request url path. */
        ext: string;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: never;
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.email.list": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Email"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.email.create": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Email"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.email.delete": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
        /** @description Get parameter `email_id` from request url path. */
        email_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Email"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.permission.has_partial_permissions": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          actions: string[];
          entity: string;
          /** Format: int64 */
          realm_id: number;
        }[];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            actions: string[];
            entity: string;
            /** Format: int64 */
            realm_id: number;
          }[];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.permission.has_record_permissions": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          actions: string[];
          entity: string;
          record_ids: number[];
        }[];
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": {
            action: string;
            entity: string;
            record_ids: number[];
          }[];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.phone.list": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Phone"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.phone.create": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value?: string;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Phone"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.phone.delete": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
        /** @description Get parameter `phone_id` from request url path. */
        phone_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.Phone"][];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.list_realms": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Realm>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.reject": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.resend_invitation_email": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.list_roles": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Role>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.list_root_of_realms": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Realm>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.set_disabled": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.set_in_kernel": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.set_limited": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.set_locked": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          value: boolean;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.base.User"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.share_link.list": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.studio.ShareLink>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.user.list_steward_of_realms": {
    parameters: {
      path: {
        /** @description Get parameter `user_id` from request url path. */
        user_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.base.Realm>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.obtained_coupon.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.wallet.ObtainedCoupon>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.obtained_coupon.obtain": {
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          /** Format: int64 */
          coupon_id: number;
          description?: string | null;
          /** Format: int64 */
          realm_id: number;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.wallet.ObtainedCoupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.obtained_coupon.bulk_delete": {
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.obtained_coupon.show": {
    parameters: {
      path: {
        /** @description Get parameter `obtained_id` from request url path. */
        obtained_id: number;
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.wallet.ObtainedCoupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.obtained_coupon.delete": {
    parameters: {
      path: {
        /** @description Get parameter `obtained_id` from request url path. */
        obtained_id: number;
      };
    };
    responses: {
      /** @description Ok */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.shared.StatusInfo"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.obtained_coupon.update": {
    parameters: {
      path: {
        /** @description Get parameter `obtained_id` from request url path. */
        obtained_id: number;
      };
    };
    /** @description Extract json format data from request. */
    requestBody?: {
      content: {
        "application/json": {
          description?: string | null;
          /** Format: date-time */
          expires_at?: string | null;
          is_used?: boolean | null;
          /** Format: date-time */
          updated_at?: string | null;
          /** Format: int64 */
          updated_by?: number | null;
        };
      };
    };
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.models.wallet.ObtainedCoupon"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
  "savvy_main_back.routers.wallet.used_coupon.list": {
    responses: {
      /** @description Response with json format data */
      200: {
        content: {
          "application/json": components["schemas"]["savvy_main_back.data.PagedData<savvy_main_back.models.wallet.UsedCoupon>"];
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Not found */
      404: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
      /** @description Internal server error */
      500: {
        content: {
          "application/json": components["schemas"]["salvo_core.http.errors.status_error.StatusError"];
        };
      };
    };
  };
}
